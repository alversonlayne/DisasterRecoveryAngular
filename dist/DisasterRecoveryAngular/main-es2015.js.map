{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./environments/environment.ts","./src/app-routing.module.ts","./src/app.component.ts","./src/app.component.html","./src/app.module.ts","./src/app/add-job/add-job.component.ts","./src/app/add-job/add-job.component.html","./src/app/jobs/jobs.component.ts","./src/app/jobs/jobs.component.html","./src/app/jobs/jobs.service.ts","./src/app/jobs/jobsModel.ts","./src/app/machines/machines.component.ts","./src/app/machines/machines.component.html","./src/app/machines/machines.service.ts","./src/app/timecards/timecards.component.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACQ;AACY;AACG;;;AAE9E,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,0EAAa,EAAE;IAC1C,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,sFAAiB,EAAE;IAClD,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,yFAAkB,EAAE;CACrD,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACfD;AAAA;AAAA;AAAA;AAA0C;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,yBAAyB,CAAC;KACnC;;wEAFY,YAAY;4FAAZ,YAAY;QCNzB,uEACE;QAAA,kEAkDO;QACP,uEACE;QAAA,qEACE;QAAA,qEAAI;QAAA,oEAAG;QAAA,wFAA6B;QAAA,4DAAI;QAAA,4DAAK;QAC/C,4DAAK;QAEL,yEACE;QAAA,uEAAsB;QAAA,8EAAmB;QAAA,4DAAI;QAC7C,wEAA0B;QAAA,8EAAkB;QAAA,4DAAI;QAChD,mEAAiB;QACjB,wEAAY;QAAA,6EAAiB;QAAA,4DAAI;QACnC,4DAAM;QAEN,uEACE;QAAA,4EAA+B;QACjC,4DAAM;QACR,4DAAO;QACT,4DAAO;;6FD9DM,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEe;AACT;AACgB;AACY;AACG;AACtB;AACe;AAC1B;;AActC,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YADJ,CAAC,uEAAa,EAAE,oEAAgB,EAAE,qEAAgB,EAAE,0DAAW,CAAC;mIAI9D,SAAS,mBAVlB,2DAAY;QACZ,0EAAa;QACb,sFAAiB;QACjB,yFAAkB;QAClB,kFAAe,aAEP,uEAAa,EAAE,oEAAgB,EAAE,qEAAgB,EAAE,0DAAW;6FAI7D,SAAS;cAZrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,0EAAa;oBACb,sFAAiB;oBACjB,yFAAkB;oBAClB,kFAAe;iBAChB;gBACD,OAAO,EAAE,CAAC,uEAAa,EAAE,oEAAgB,EAAE,qEAAgB,EAAE,0DAAW,CAAC;gBACzE,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACvBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAEJ;;;;AASvC,MAAM,eAAe;IAI1B,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAH5C,aAAQ,GAAG,IAAI,yDAAS,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QACnD,cAAS,GAAY,KAAK,CAAC;QAC3B,aAAQ,GAAG,EAAE,CAAC;IACiC,CAAC;IAEhD,QAAQ;QACN,kBAAkB;IACpB,CAAC;IACD,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC3B,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAC9C,QAAQ,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,6BAA6B,EAAE,QAAQ,CAAC,EAChE,KAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,UAAU,CAAC,CAC5C,CAAC;IACJ,CAAC;;8EAhBU,eAAe;+FAAf,eAAe;QCL5B,sEACE;QAAA,yEACE;QAAA,oEAAG;QAAA,yEAAc;QAAA,4DAAI;QACrB,wEAAO;QAAA,mEAAQ;QAAA,4DAAQ;QACvB,oEACE;QAAA,2EACF;QAD0C,6LAA8B;QAAtE,4DACF;QAAA,4DAAI;QACJ,wEAAO;QAAA,sEAAW;QAAA,4DAAQ;QAC1B,qEACE;QAAA,4EAKF;QAFI,kMAAkC;QAHpC,4DAKF;QAAA,4DAAI;QACJ,yEAAO;QAAA,uEAAW;QAAA,4DAAQ;QAC1B,qEACE;QAAA,4EACF;QAD0C,6LAA6B;QAArE,4DACF;QAAA,4DAAI;QACJ,yEAAO;QAAA,6EAAiB;QAAA,4DAAQ;QAChC,qEACE;QAAA,4EAKF;QAFI,kMAAkC;QAHpC,4DAKF;QAAA,4DAAI;QACJ,6EACE;QAD4C,8IAAS,cAAU,IAAC;QAChE,sEACF;QAAA,4DAAS;QACX,4DAAM;QACR,4DAAM;;QA1BwC,0DAA8B;QAA9B,yFAA8B;QAOpE,0DAAkC;QAAlC,6FAAkC;QAKI,0DAA6B;QAA7B,wFAA6B;QAOnE,0DAAkC;QAAlC,6FAAkC;;6FDnB7B,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;IC6B5C,qEACE;IAAA,qEAAI;IAAA,uDAAiB;IAAA,4DAAK;IAC1B,qEAAI;IAAA,uDAAqB;IAAA,4DAAK;IAC9B,qEAAI;IAAA,uDAAgB;IAAA,4DAAK;IACzB,qEAAI;IAAA,uDAAqB;IAAA,4DAAK;IAC9B,qEAAI;IAAA,gEAAI;IAAA,4DAAK;IACb,sEAAI;IAAA,kEAAM;IAAA,4DAAK;IACjB,4DAAK;;;IANC,0DAAiB;IAAjB,+EAAiB;IACjB,0DAAqB;IAArB,mFAAqB;IACrB,0DAAgB;IAAhB,8EAAgB;IAChB,0DAAqB;IAArB,mFAAqB;;;ADvB1B,MAAM,aAAa;IAIxB,YAAoB,UAAuB;QAAvB,eAAU,GAAV,UAAU,CAAa;QAHpC,SAAI,GAAG,EAAE,CAAC;IAG6B,CAAC;IAE/C,QAAQ;QACN,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC,SAAS,CACjC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAC1B,KAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,EAC9B,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAC7C,CAAC;IACJ,CAAC;;0EAZU,aAAa;6FAAb,aAAa;QCJ1B,sEACE;QAAA,qEAAI;QAAA,oEAAS;QAAA,4DAAK;QAClB,uEACG;QAAA,kEAAO;QAAA,4DACT;QACD,2EACE;QAAA,wEACE;QAAA,qEACE;QAAA,qEACE;QAAA,qEACF;QAAA,4DAAK;QACL,sEACE;QAAA,yEACF;QAAA,4DAAK;QACL,sEACE;QAAA,yEACF;QAAA,4DAAK;QACL,sEACE;QAAA,+EACF;QAAA,4DAAK;QACP,4DAAK;QACP,4DAAQ;QACR,yEACE;QAAA,0GACE;QAOJ,4DAAQ;QACV,4DAAQ;QACV,4DAAM;QACN,4EAA+B;;QAhC1B,0DAA0B;QAA1B,6IAA0B;QAqBrB,2DAAwB;QAAxB,6EAAwB;;6FDnBrB,aAAa;cANzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAEG;AACF;;;AAMrC,MAAM,WAAW;IAEtB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAD5B,SAAI,GAAW,kCAAkC,CAAC;IACnB,CAAC;IAExC,OAAO;QACL,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAU,IAAI,CAAC,IAAI,CAAC;aACvB,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;IACzC,CAAC;IACD,kCAAkC;IAClC,+CAA+C;IAC/C,IAAI;IACJ,MAAM,CAAC,GAAc;QACnB,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CAAM,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC;aACzB,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;IACzC,CAAC;IACD,YAAY,CAAC,KAAwB;QACnC,OAAO,uDAAU,CAAC,KAAK,CAAC,OAAO,IAAI,cAAc,CAAC,CAAC;IACrD,CAAC;;sEAnBU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAO,MAAM,SAAS;IACpB,YACS,EAAU,EACV,OAAe,EACf,WAAmB,EACnB,MAAc,EACd,WAAmB;QAJnB,OAAE,GAAF,EAAE,CAAQ;QACV,YAAO,GAAP,OAAO,CAAQ;QACf,gBAAW,GAAX,WAAW,CAAQ;QACnB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAQ;IACzB,CAAC;CACL;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;IC0B5C,qEACE;IAAA,qEAAI;IAAA,uDAAyB;IAAA,4DAAK;IAClC,qEAAI;IAAA,uDAAyB;IAAA,4DAAK;IAClC,qEAAI;IAAA,uDAAoB;IAAA,4DAAK;IAC7B,qEAAI;IAAA,uDAAyB;IAAA,4DAAK;IACpC,4DAAK;;;IAJC,0DAAyB;IAAzB,uFAAyB;IACzB,0DAAyB;IAAzB,uFAAyB;IACzB,0DAAoB;IAApB,kFAAoB;IACpB,0DAAyB;IAAzB,uFAAyB;;ADtB9B,MAAM,iBAAiB;IAG5B,YAAoB,cAA+B;QAA/B,mBAAc,GAAd,cAAc,CAAiB;QAF5C,aAAQ,GAAG,EAAE,CAAC;IAEiC,CAAC;IAEvD,QAAQ;QACN,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC,SAAS,CACzC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,EAC9B,KAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,EAC9B,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAC7C,CAAC;IACJ,CAAC;;kFAXU,iBAAiB;iGAAjB,iBAAiB;QCF9B,sEACE;QAAA,qEAAI;QAAA,wEAAa;QAAA,4DAAK;QACtB,2EACE;QAAA,wEACE;QAAA,qEACE;QAAA,qEACE;QAAA,yEACF;QAAA,4DAAK;QACL,qEACE;QAAA,wEACF;QAAA,4DAAK;QACL,sEACE;QAAA,yEACF;QAAA,4DAAK;QACL,sEACE;QAAA,+EACF;QAAA,4DAAK;QACP,4DAAK;QACP,4DAAQ;QACR,yEACE;QAAA,6GACE;QAKJ,4DAAQ;QACV,4DAAQ;QACV,4DAAM;QACN,4EAA+B;;QATrB,2DAAgC;QAAhC,iFAAgC;;6FDlB7B,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAEG;AACF;;;AAKrC,MAAM,eAAe;IAE1B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAD5B,SAAI,GAAW,sCAAsC,CAAC;IACvB,CAAC;IACxC,WAAW;QACT,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAc,IAAI,CAAC,IAAI,CAAC;aAC3B,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;IACzC,CAAC;IACD,YAAY,CAAC,KAAwB;QACnC,OAAO,uDAAU,CAAC,KAAK,CAAC,OAAO,IAAI,cAAc,CAAC,CAAC;IACrD,CAAC;;8EAVU,eAAe;kGAAf,eAAe,WAAf,eAAe,mBAFd,MAAM;6FAEP,eAAe;cAH3B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAkD;;AAO3C,MAAM,kBAAkB;IAE7B;IAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;oFALU,kBAAkB;kGAAlB,kBAAkB;6FAAlB,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIW;;;AAE1D,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,sDAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { JobsComponent } from \"../src/app/jobs/jobs.component\";\r\nimport { MachinesComponent } from \"../src/app/machines/machines.component\";\r\nimport { TimecardsComponent } from \"../src/app/timecards/timecards.component\";\r\n\r\nconst routes: Routes = [\r\n  { path: \"jobs\", component: JobsComponent },\r\n  { path: \"machines\", component: MachinesComponent },\r\n  { path: \"timecards\", component: TimecardsComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'DisasterRecoveryAngular';\r\n}\r\n","<!DOCTYPE html>\r\n<html>\r\n  <head>\r\n    <style>\r\n      ul {\r\n        list-style-type: none;\r\n        margin: 0;\r\n        padding: 0;\r\n        overflow: hidden;\r\n        background-color: #333;\r\n      }\r\n\r\n      li {\r\n        float: left;\r\n      }\r\n\r\n      li a {\r\n        display: block;\r\n        color: white;\r\n        text-align: center;\r\n        padding: 14px 16px;\r\n        text-decoration: none;\r\n      }\r\n      .vertical-menu {\r\n        width: 200px;\r\n        list-style-type: none;\r\n        margin: 0;\r\n        padding: 0;\r\n        width: 15%;\r\n        background-color: #f1f1f1;\r\n        height: 100%; /* Full height */\r\n        position: fixed; /* Make it stick, even on scroll */\r\n        overflow: auto;\r\n      }\r\n\r\n      .vertical-menu a {\r\n        background-color: #eee;\r\n        color: black;\r\n        display: block;\r\n        padding: 12px;\r\n        text-decoration: none;\r\n      }\r\n\r\n      .vertical-menu a:hover {\r\n        background-color: #ccc;\r\n      }\r\n\r\n      .vertical-menu a.active {\r\n        background-color: #4caf50;\r\n        color: white;\r\n      }\r\n    </style>\r\n  </head>\r\n  <body>\r\n    <ul>\r\n      <li><a>Disaster Recovery Application</a></li>\r\n    </ul>\r\n\r\n    <div class=\"vertical-menu\">\r\n      <a routerLink=\"/jobs\">Job Code Management</a>\r\n      <a routerLink=\"/machines\">Machine Management</a>\r\n      <a href=\"#\"> </a>\r\n      <a href=\"#\">Timecard Approval</a>\r\n    </div>\r\n\r\n    <div>\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </body>\r\n</html>\r\n","import { BrowserModule } from \"@angular/platform-browser\";\r\nimport { NgModule } from \"@angular/core\";\r\n\r\nimport { AppRoutingModule } from \"./app-routing.module\";\r\nimport { AppComponent } from \"./app.component\";\r\nimport { JobsComponent } from \"../src/app/jobs/jobs.component\";\r\nimport { MachinesComponent } from \"../src/app/machines/machines.component\";\r\nimport { TimecardsComponent } from \"../src/app/timecards/timecards.component\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { AddJobComponent } from \"../src/app/add-job/add-job.component\";\r\nimport { FormsModule } from \"@angular/forms\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    JobsComponent,\r\n    MachinesComponent,\r\n    TimecardsComponent,\r\n    AddJobComponent\r\n  ],\r\n  imports: [BrowserModule, AppRoutingModule, HttpClientModule, FormsModule],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","import { Component, OnInit } from \"@angular/core\";\nimport { JobsService } from \"../jobs/jobs.service\";\nimport { JobsModel } from \"../jobs/jobsModel\";\n// import { FormBuilder, FormGroup, FormControl } from \"@angular/forms\";\nimport { Routes, RouterModule } from \"@angular/router\";\n\n@Component({\n  selector: \"app-add-job\",\n  templateUrl: \"./add-job.component.html\",\n  styleUrls: [\"./add-job.component.css\"]\n})\nexport class AddJobComponent implements OnInit {\n  jobModel = new JobsModel(null, \"\", \"\", null, null);\n  submitted: boolean = false;\n  errorMsg = \"\";\n  constructor(private jobsServise: JobsService) {}\n\n  ngOnInit(): void {\n    //this.onSubmit();\n  }\n  onSubmit() {\n    this.submitted = true;\n    console.log(this.jobModel);\n    this.jobsServise.addJob(this.jobModel).subscribe(\n      Response => console.log(\"Successfully added new job.\", Response),\n      error => (this.errorMsg = error.statusText)\n    );\n  }\n}\n","<style>\n  div {\n    position: relative;\n    left: 250px;\n  }\n</style>\n<div>\n  <div class=\"form-group\">\n    <p>add-job works!</p>\n    <label>Job Code</label>\n    <p>\n      <input class=\"form-control\" type=\"text\" [(ngModel)]=\"jobModel.jobcode\" />\n    </p>\n    <label>Description</label>\n    <p>\n      <input\n        class=\"form-control\"\n        type=\"text\"\n        [(ngModel)]=\"jobModel.description\"\n      />\n    </p>\n    <label>Hourly Rate</label>\n    <p>\n      <input class=\"form-control\" type=\"text\" [(ngModel)]=\"jobModel.hrRate\" />\n    </p>\n    <label>Max Hours per Day</label>\n    <p>\n      <input\n        class=\"form-control\"\n        type=\"text\"\n        [(ngModel)]=\"jobModel.maxHrPerDay\"\n      />\n    </p>\n    <button class=\"btn btn-primary\" type=\"submit\" (click)=\"onSubmit()\">\n      Register\n    </button>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { JobsService } from \"../jobs/jobs.service\";\r\n  import { from } from 'rxjs';\r\n\r\n@Component({\r\n  selector: \"app-jobs\",\r\n  templateUrl: \"./jobs.component.html\",\r\n  styleUrls: [\"./jobs.component.css\"]\r\n})\r\n\r\nexport class JobsComponent implements OnInit {\r\n  public jobs = [];\r\n  public errMsg;\r\n\r\n  constructor(private jobService: JobsService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.jobService.getJobs().subscribe(\r\n      data => (this.jobs = data),\r\n      error => (this.errMsg = error),\r\n      () => console.log(\"the sequence completed!\")\r\n    );\r\n  }\r\n}\r\n","<style>\r\n  div {\r\n    position: relative;\r\n    left: 250px;\r\n  }\r\n</style>\r\n<div>\r\n  <h3>Jobs List</h3>\r\n  <a [routerLink]=\"['/addjob']\" routerLinkActive=\"router-link-active\"\r\n    >Add New</a\r\n  >\r\n  <table class=\"table table-hover\" style=\"width: auto;\">\r\n    <thead>\r\n      <tr>\r\n        <th>\r\n          Job Code\r\n        </th>\r\n        <th>\r\n          Description\r\n        </th>\r\n        <th>\r\n          Hourly Rate\r\n        </th>\r\n        <th>\r\n          Max Hours per Day\r\n        </th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor=\"let job of jobs\">\r\n        <td>{{ job.jobCode }}</td>\r\n        <td>{{ job.description }}</td>\r\n        <td>{{ job.hrRate }}</td>\r\n        <td>{{ job.maxHrPerDay }}</td>\r\n        <td>Edit</td>\r\n        <td>Delete</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n<router-outlet></router-outlet>\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport { catchError } from \"rxjs/operators\";\r\nimport { IJobs } from \"./jobs\";\r\nimport { JobsModel } from \"./jobsModel\";\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class JobsService {\r\n  private _url: string = \"https://localhost:44366/api/jobs\";\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getJobs(): Observable<IJobs[]> {\r\n    return this.http\r\n      .get<IJobs[]>(this._url)\r\n      .pipe(catchError(this.errorHandler));\r\n  }\r\n  // addJobs(): Observable<IJobs[]>{\r\n  //   return this.http.post<IJobs[]>(this._url,)\r\n  // }\r\n  addJob(job: JobsModel) {\r\n    return this.http\r\n      .post<any>(this._url, job)\r\n      .pipe(catchError(this.errorHandler));\r\n  }\r\n  errorHandler(error: HttpErrorResponse) {\r\n    return throwError(error.message || \"Server Error\");\r\n  }\r\n}\r\n","export class JobsModel {\r\n  constructor(\r\n    public id: number,\r\n    public jobcode: string,\r\n    public description: string,\r\n    public hrRate: number,\r\n    public maxHrPerDay: number\r\n  ) {}\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { MachinesService } from \"../machines/machines.service\";\r\n\r\n@Component({\r\n  selector: \"app-machines\",\r\n  templateUrl: \"./machines.component.html\",\r\n  styleUrls: [\"./machines.component.css\"]\r\n})\r\nexport class MachinesComponent implements OnInit {\r\n  public machines = [];\r\n  public errMsg;\r\n  constructor(private machineService: MachinesService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.machineService.getMachines().subscribe(\r\n      data => (this.machines = data),\r\n      error => (this.errMsg = error),\r\n      () => console.log(\"the sequence completed!\")\r\n    );\r\n  }\r\n}\r\n","<style>\r\n  div {\r\n    position: relative;\r\n    left: 250px;\r\n  }\r\n</style>\r\n<div>\r\n  <h3>Machines List</h3>\r\n  <table class=\"table table-hover\">\r\n    <thead>\r\n      <tr>\r\n        <th>\r\n          Machine Code\r\n        </th>\r\n        <th>\r\n          Description\r\n        </th>\r\n        <th>\r\n          Hourly Rent\r\n        </th>\r\n        <th>\r\n          Max Hours per Day\r\n        </th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor=\"let machine of machines\">\r\n        <td>{{ machine.machineCode }}</td>\r\n        <td>{{ machine.description }}</td>\r\n        <td>{{ machine.hrRent }}</td>\r\n        <td>{{ machine.maxHrPerDay }}</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n<router-outlet></router-outlet>\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport { catchError } from \"rxjs/operators\";\r\nimport { IMachines } from \"./machines\";\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class MachinesService {\r\n  private _url: string = \"https://localhost:44366/api/machines\";\r\n  constructor(private http: HttpClient) {}\r\n  getMachines(): Observable<IMachines[]> {\r\n    return this.http\r\n      .get<IMachines[]>(this._url)\r\n      .pipe(catchError(this.errorHandler));\r\n  }\r\n  errorHandler(error: HttpErrorResponse) {\r\n    return throwError(error.message || \"Server Error\");\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-timecards',\n  templateUrl: './timecards.component.html',\n  styleUrls: ['./timecards.component.css']\n})\nexport class TimecardsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from '../src/app.module';\nimport { environment } from '../environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}