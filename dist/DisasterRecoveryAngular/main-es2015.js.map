{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app-routing.module.ts","./src/app/add-job/add-job.component.ts","./src/app/add-job/add-job.component.html","./src/app/add-machine/add-machine.component.ts","./src/app/add-machine/add-machine.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/auth.component.ts","./src/app/auth/auth.component.html","./src/app/delete-job/delete-job.component.ts","./src/app/delete-job/delete-job.component.html","./src/app/delete-machine/delete-machine.component.ts","./src/app/delete-machine/delete-machine.component.html","./src/app/edit-job/edit-job.component.ts","./src/app/edit-job/edit-job.component.html","./src/app/edit-machine/edit-machine.component.ts","./src/app/edit-machine/edit-machine.component.html","./src/app/jobs/jobs.component.ts","./src/app/jobs/jobs.component.html","./src/app/jobs/jobs.service.ts","./src/app/machines/machines.component.ts","./src/app/machines/machines.component.html","./src/app/machines/machines.service.ts","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/shared/Auth.service.ts","./src/app/shared/alertify.service.ts","./src/app/shared/auth.service.ts","./src/app/shared/error.interceptor.ts","./src/app/shared/jobs.service.ts","./src/app/shared/jobsModel.ts","./src/app/shared/machines.service.ts","./src/app/shared/machinesModel.ts","./src/app/timecards/timecards.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\n\r\nimport { JobsComponent } from \"./app/jobs/jobs.component\";\r\nimport { MachinesComponent } from \"./app/machines/machines.component\";\r\nimport { TimecardsComponent } from \"./app/timecards/timecards.component\";\r\nimport { AddJobComponent } from \"./app/add-job/add-job.component\";\r\nimport { EditJobComponent } from \"./app/edit-job/edit-job.component\";\r\nimport { DeleteJobComponent } from \"./app/delete-job/delete-job.component\";\r\nimport { AddMachineComponent } from \"./app/add-machine/add-machine.component\";\r\nimport { EditMachineComponent } from \"./app/edit-machine/edit-machine.component\";\r\nimport { DeleteMachineComponent } from \"./app/delete-machine/delete-machine.component\";\r\n\r\nconst routes: Routes = [\r\n  { path: \"\", redirectTo: \"/\", pathMatch: \"full\" },\r\n  { path: \"jobs\", component: JobsComponent },\r\n  { path: \"machines\", component: MachinesComponent },\r\n  { path: \"timecards\", component: TimecardsComponent },\r\n  { path: \"addjob\", component: AddJobComponent },\r\n  { path: \"editjob/:id\", component: EditJobComponent },\r\n  { path: \"deletejob/:id\", component: DeleteJobComponent },\r\n  { path: \"addmachine\", component: AddMachineComponent },\r\n  { path: \"editmachine/:id\", component: EditMachineComponent },\r\n  { path: \"deletemachine/:id\", component: DeleteMachineComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component, OnInit } from \"@angular/core\";\r\n\r\nimport { JobsService } from \"../shared/jobs.service\";\r\nimport { JobsModel } from \"../shared/jobsModel\";\r\nimport { IJobs } from \"../shared/jobs\";\r\n// import { FormBuilder, FormGroup, FormControl } from \"@angular/forms\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\n\r\n@Component({\r\n  selector: \"app-add-job\",\r\n  templateUrl: \"./add-job.component.html\",\r\n  styleUrls: [\"./add-job.component.css\"]\r\n})\r\nexport class AddJobComponent implements OnInit {\r\n\r\n  //timecard = { Id: null, Name: null, DateCreated: null, isConfirmed: null };\r\n  jobModel = new JobsModel(undefined, \"\", \"\", null, null);\r\n  //jobs: Observable<IJobs>;\r\n\r\n  submitted: boolean = false;\r\n  errorMsg = \"\";\r\n  constructor(private jobsServise: JobsService) {}\r\n\r\n  ngOnInit(): void {\r\n    //this.onSubmit();\r\n\r\n    //s console.log(this.jobModel);\r\n  }\r\n  onSubmit() {\r\n    console.log(this.jobModel);\r\n    this.submitted = true;\r\n    // this.jobModel.Id = 10;\r\n    this.jobsServise.addJob(this.jobModel).subscribe(\r\n      Response => console.log(\"Successfully added new job.\", Response),\r\n      error => (this.errorMsg = error.statusText)\r\n    );\r\n  }\r\n}\r\n","<style>\r\n  div {\r\n    position: relative;\r\n    left: 250px;\r\n  }\r\n</style>\r\n<div>\r\n  <div class=\"form-group\">\r\n\r\n    <h3>Add New Job</h3>\r\n    <label>Job Code</label>\r\n    <p>\r\n      <input class=\"form-control\" type=\"text\" [(ngModel)]=\"jobModel.JobCode\" />\r\n    </p>\r\n    <label>Description</label>\r\n    <p>\r\n      <input\r\n        class=\"form-control\"\r\n        type=\"text\"\r\n\r\n        [(ngModel)]=\"jobModel.Description\"\r\n      />\r\n    </p>\r\n    <label>Hourly Rate</label>\r\n    <p>\r\n\r\n      <input class=\"form-control\" type=\"text\" [(ngModel)]=\"jobModel.HrRate\" />\r\n    </p>\r\n    <label>Max Hours per Day</label>\r\n    <p>\r\n      <input\r\n        class=\"form-control\"\r\n        type=\"text\"\r\n\r\n        [(ngModel)]=\"jobModel.MaxHrPerDay\"\r\n      />\r\n    </p>\r\n    <button class=\"btn btn-primary\" type=\"submit\" (click)=\"onSubmit()\">\r\n      Register\r\n    </button>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, FormControl } from \"@angular/forms\";\r\nimport { MachinesService } from \"../shared/machines.service\";\r\nimport { MachinesModel } from \"../shared/machinesModel\";\r\n//test\r\n\r\n@Component({\r\n  selector: \"app-add-machine\",\r\n  templateUrl: \"./add-machine.component.html\",\r\n  styleUrls: [\"./add-machine.component.css\"]\r\n})\r\nexport class AddMachineComponent implements OnInit {\r\n  submitted = false;\r\n  errorMsg = \"\";\r\n  machineModel = new MachinesModel(undefined, null, \"\", null, null);\r\n  constructor(private machineService: MachinesService) {}\r\n\r\n  ngOnInit(): void {}\r\n  success() {\r\n    alert(\"Successfully added machine!\");\r\n  }\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    this.machineService.addMachine(this.machineModel).subscribe(\r\n      Response => console.log(\"success!\", Response),\r\n      error => (this.errorMsg = error.statusText)\r\n    );\r\n  }\r\n}\r\n","<style>\r\n  div {\r\n    position: relative;\r\n    left: 250px;\r\n  }\r\n</style>\r\n<div>\r\n  <div class=\"form-group\">\r\n    <h3>Add New Machine</h3>\r\n    <label>Machine Code</label>\r\n    <p>\r\n      <input\r\n        class=\"form-control\"\r\n        type=\"text\"\r\n        [(ngModel)]=\"machineModel.MachineCode\"\r\n      />\r\n    </p>\r\n    <label>Description</label>\r\n    <p>\r\n      <input\r\n        class=\"form-control\"\r\n        type=\"text\"\r\n        [(ngModel)]=\"machineModel.Description\"\r\n      />\r\n    </p>\r\n    <label>Hourly Rate</label>\r\n    <p>\r\n      <input\r\n        class=\"form-control\"\r\n        type=\"text\"\r\n        [(ngModel)]=\"machineModel.HrRent\"\r\n      />\r\n    </p>\r\n    <label>Max Hours per Day</label>\r\n    <p>\r\n      <input\r\n        class=\"form-control\"\r\n        type=\"text\"\r\n        [(ngModel)]=\"machineModel.MaxHrPerDay\"\r\n      />\r\n    </p>\r\n    <button class=\"btn btn-primary\" type=\"submit\" (click)=\"onSubmit()\">\r\n      Register\r\n    </button>\r\n  </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'DisasterRecoveryAngular';\r\n}\r\n","<!DOCTYPE html>\r\n<html>\r\n  <head>\r\n    <style>\r\n      ul {\r\n        list-style-type: none;\r\n        margin: 0;\r\n        padding: 0;\r\n        overflow: hidden;\r\n        background-color: #333;\r\n      }\r\n\r\n      li {\r\n        float: left;\r\n      }\r\n\r\n      li a {\r\n        display: block;\r\n        color: white;\r\n        text-align: center;\r\n        padding: 14px 16px;\r\n        text-decoration: none;\r\n      }\r\n      .vertical-menu {\r\n        width: 200px;\r\n        list-style-type: none;\r\n        margin: 0;\r\n        padding: 0;\r\n        width: 15%;\r\n        background-color: #f1f1f1;\r\n        height: 100%; /* Full height */\r\n        position: fixed; /* Make it stick, even on scroll */\r\n        overflow: auto;\r\n      }\r\n\r\n      .vertical-menu a {\r\n        background-color: #eee;\r\n        color: black;\r\n        display: block;\r\n        padding: 12px;\r\n        text-decoration: none;\r\n      }\r\n\r\n      .vertical-menu a:hover {\r\n        background-color: #ccc;\r\n      }\r\n\r\n      .vertical-menu a.active {\r\n        background-color: #4caf50;\r\n        color: white;\r\n      }\r\n    </style>\r\n  </head>\r\n  <body>\r\n    <ul>\r\n      <li><a>Disaster Recovery Application</a></li>\r\n      <app-auth></app-auth>\r\n    </ul>\r\n    \r\n\r\n    <div class=\"vertical-menu\">\r\n      <a routerLink=\"/jobs\">Job Code Management</a>\r\n      <a routerLink=\"/machines\">Machine Management</a>\r\n      <a href=\"#\">Timecard Approval</a>\r\n    </div>\r\n\r\n    <div>\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </body>\r\n</html>\r\n","import { BrowserModule } from \"@angular/platform-browser\";\r\nimport { NgModule } from \"@angular/core\";\r\n\r\nimport { AppRoutingModule } from \"../app-routing.module\";\r\nimport { AppComponent } from \"./app.component\";\r\nimport { JobsComponent } from \"./jobs/jobs.component\";\r\nimport { MachinesComponent } from \"./machines/machines.component\";\r\nimport { TimecardsComponent } from \"./timecards/timecards.component\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { AddJobComponent } from \"./add-job/add-job.component\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { EditJobComponent } from './edit-job/edit-job.component';\r\nimport { DeleteJobComponent } from './delete-job/delete-job.component';\r\nimport { AddMachineComponent } from './add-machine/add-machine.component';\r\nimport { EditMachineComponent } from './edit-machine/edit-machine.component';\r\nimport { DeleteMachineComponent } from './delete-machine/delete-machine.component';\r\nimport { AuthComponent } from './auth/auth.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { AuthService } from './shared/auth.service';\r\nimport { ErrorInterceptorProvider } from './shared/error.interceptor';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    JobsComponent,\r\n    MachinesComponent,\r\n    TimecardsComponent,\r\n    AddJobComponent,\r\n    EditJobComponent,\r\n    DeleteJobComponent,\r\n    AddMachineComponent,\r\n    EditMachineComponent,\r\n    DeleteMachineComponent,\r\n    AuthComponent,\r\n    RegisterComponent\r\n  ],\r\n  imports: [BrowserModule, AppRoutingModule, HttpClientModule, FormsModule],\r\n  providers: [AuthService, ErrorInterceptorProvider],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from \"../shared/auth.service\";\nimport { AlertifyService } from '../shared/alertify.service';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.css']\n})\nexport class AuthComponent implements OnInit {\n\n  registerMode = false;\n  values: any;\n  model: any = {};\n  constructor( private authService: AuthService, private alertify: AlertifyService) {}\n\n  ngOnInit(): void {\n  }\n\n  \nlogin() {\n\n  this.authService.login(this.model).subscribe(next => {\n    this.alertify.success(\"Logged in successfully.\");\n  }, error => {\n    this.alertify.error(error);\n   });\n}\n\nloggedIn() {\n  const token = localStorage.getItem('token');\n  return !!token;\n}\n\nlogout(){\n  localStorage.removeItem('token');\n  this.alertify.message('logged out');\n} \n\nregisterToggle(){\n  this.registerMode = true;\n  console.log(this.registerMode);\n}\n\ncancelRegisterMode(registerMode: boolean) {\n  this.registerMode = registerMode;\n }\n\n}\n","\n\n<form  #loginForm = \"ngForm\" *ngIf=\"!loggedIn()\"\n    style=\"padding-top: 4pt; padding-bottom: 2pt; float: right; padding-right: 2pt;\"\n    class=\"form-inline mt-2 mt-md-0\" \n    (ngSubmit) = \"login()\">\n   \n    <input class=\"form-control mr-sm-2\" style=\"width: 40%; font-size: 12px;\" type=\"text\" required name=\"username\" placeholder=\"Username\" required [(ngModel)]=\"model.username\">\n    <input class=\"form-control mr-sm-2\" style=\"width: 40%; font-size: 12px;\" type=\"password\" required name=\"password\" placeholder=\"Password\" required [(ngModel)]=\"model.password\">\n    <button [disabled]=\"!loginForm.valid\" style=\"width: 14%; font-size: 12px;\" class=\"btn btn-success\" type=\"submit\">Login</button>\n  </form>\n  \n  <button *ngIf=\"!loggedIn() \"class=\"btn btn-info btn-sm\" (click)=\"registerToggle()\">Register</button>\n\n\n  <button class=\"btn btn-info btn-sm\">Learn more</button>\n\n  <div *ngIf=\"loggedIn()\" >\n  <button class=\"nav-item\" (click)=\"logout()\">Logout</button>\n  <p class=\"text-light\">Welcome, user!</p>\n  </div>\n  \n<div *ngIf=\"registerMode\">\n  <app-register (cancelRegister)=\"cancelRegisterMode($event)\"></app-register>\n</div>  ","import { Component, OnInit } from \"@angular/core\";\r\nimport { JobsService } from \"../shared/jobs.service\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { Location } from \"@angular/common\";\r\n@Component({\r\n  selector: \"app-delete-job\",\r\n  templateUrl: \"./delete-job.component.html\",\r\n  styleUrls: [\"./delete-job.component.css\"]\r\n})\r\nexport class DeleteJobComponent implements OnInit {\r\n  errorMsg = \"\";\r\n  id: number;\r\n  public jobs;\r\n  constructor(\r\n    private jobService: JobsService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private location: Location\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n  delete() {\r\n    this.id = this.activatedRoute.snapshot.params[\"id\"];\r\n    this.jobService.deleteJob(this.id).subscribe(\r\n      data => (this.jobs = data),\r\n      error => (this.errorMsg = error),\r\n      () => console.log(\"the sequene completed!\")\r\n    );\r\n    alert(\"Successfully deleted!\");\r\n  }\r\n  backClicked() {\r\n    this.location.back();\r\n  }\r\n}\r\n","<style>\r\n  div {\r\n    position: relative;\r\n    left: 250px;\r\n  }\r\n</style>\r\n\r\n<div>\r\n  <p>Are you sure to delete this employee?</p>\r\n  <button (click)=\"delete()\">Yes</button>\r\n  <br />\r\n  <button (click)=\"backClicked()\">Go Back</button>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-delete-machine',\r\n  templateUrl: './delete-machine.component.html',\r\n  styleUrls: ['./delete-machine.component.css']\r\n})\r\nexport class DeleteMachineComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>delete-machine works!</p>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { JobsModel } from \"../shared/jobsModel\";\r\nimport { JobsService } from \"../shared/jobs.service\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TimecardsComponent } from \"../timecards/timecards.component\";\r\n@Component({\r\n  selector: \"app-edit-job\",\r\n  templateUrl: \"./edit-job.component.html\",\r\n  styleUrls: [\"./edit-job.component.css\"]\r\n})\r\nexport class EditJobComponent implements OnInit {\r\n  submitted = false;\r\n  errorMsg = \"\";\r\n  id: number;\r\n  public jobs;\r\n  jobModel = new JobsModel(undefined, \"\", \"\", null, null);\r\n  constructor(\r\n    private jobService: JobsService,\r\n    private activatedRoute: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.id = this.activatedRoute.snapshot.params[\"id\"];\r\n    this.jobModel.Id = this.id;\r\n  }\r\n  onSubmit() {\r\n    console.log(this.jobModel);\r\n\r\n    this.submitted = true;\r\n    this.jobService.editJob(this.jobModel, this.id).subscribe();\r\n  }\r\n}\r\n","<style>\r\n  div {\r\n    position: relative;\r\n    left: 250px;\r\n  }\r\n</style>\r\n<div>\r\n  <label>ID</label>\r\n  <p>\r\n    <input disabled type=\"text\" [(ngModel)]=\"jobModel.Id\" />\r\n  </p>\r\n\r\n  <label>Job Code</label>\r\n  <p>\r\n    <input required type=\"text\" [(ngModel)]=\"jobModel.JobCode\" />\r\n  </p>\r\n\r\n  <label>Description</label>\r\n  <p>\r\n    <input type=\"text\" [(ngModel)]=\"jobModel.Description\" />\r\n  </p>\r\n  <label>Hourly Rate</label>\r\n  <p>\r\n    <input type=\"text\" [(ngModel)]=\"jobModel.HrRate\" />\r\n  </p>\r\n  <label>Max Hour per Day</label>\r\n  <p>\r\n    <input type=\"text\" [(ngModel)]=\"jobModel.MaxHrPerDay\" />\r\n  </p>\r\n  <button class=\"btn btn-primary\" type=\"submit\" (click)=\"onSubmit()\">\r\n    Register\r\n  </button>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-edit-machine',\r\n  templateUrl: './edit-machine.component.html',\r\n  styleUrls: ['./edit-machine.component.css']\r\n})\r\nexport class EditMachineComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>edit-machine works!</p>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { JobsService } from \"../jobs/jobs.service\";\r\n  import { from } from 'rxjs';\r\n\r\n@Component({\r\n  selector: \"app-jobs\",\r\n  templateUrl: \"./jobs.component.html\",\r\n  styleUrls: [\"./jobs.component.css\"]\r\n})\r\n\r\nexport class JobsComponent implements OnInit {\r\n  public jobs = [];\r\n  public errMsg;\r\n\r\n  constructor(private jobService: JobsService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.jobService.getJobs().subscribe(\r\n      data => (this.jobs = data),\r\n      error => (this.errMsg = error),\r\n      () => console.log(\"the sequence completed!\")\r\n    );\r\n  }\r\n}\r\n","<style>\r\n  div {\r\n    position: relative;\r\n    left: 250px;\r\n  }\r\n</style>\r\n<div>\r\n  <h3>Jobs List</h3>\r\n  <a routerLink=\"/addjob\">Add New</a>\r\n  <table class=\"table table-hover\" style=\"width: auto;\">\r\n    <thead>\r\n      <tr>\r\n        <th>\r\n          Job Code\r\n        </th>\r\n        <th>\r\n          Description\r\n        </th>\r\n        <th>\r\n          Hourly Rate\r\n        </th>\r\n        <th>\r\n          Max Hours per Day\r\n        </th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor=\"let job of jobs\">\r\n        <td>{{ job.jobCode }}</td>\r\n        <td>{{ job.description }}</td>\r\n        <td>{{ job.hrRate }}</td>\r\n        <td>{{ job.maxHrPerDay }}</td>\r\n        <td>\r\n          <a routerLink=\"/editjob/{{ job.id }}\">\r\n            Edit\r\n          </a>\r\n        </td>\r\n        <td>\r\n          <a routerLink=\"/deletejob/{{ job.id }}\">\r\n            Delete\r\n          </a>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n<router-outlet></router-outlet>\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport { catchError } from \"rxjs/operators\";\r\nimport { IJobs } from \"./jobs\";\r\nimport { JobsModel } from \"./jobsModel\";\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class JobsService {\r\n  private _url: string = \"https://localhost:44366/api/jobs\";\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getJobs(): Observable<IJobs[]> {\r\n    return this.http\r\n      .get<IJobs[]>(this._url)\r\n      .pipe(catchError(this.errorHandler));\r\n  }\r\n  // addJobs(): Observable<IJobs[]>{\r\n  //   return this.http.post<IJobs[]>(this._url,)\r\n  // }\r\n  addJob(job: JobsModel) {\r\n    return this.http\r\n      .post<any>(this._url, job)\r\n      .pipe(catchError(this.errorHandler));\r\n  }\r\n  errorHandler(error: HttpErrorResponse) {\r\n    return throwError(error.message || \"Server Error\");\r\n  }\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { MachinesService } from \"../machines/machines.service\";\r\n\r\n@Component({\r\n  selector: \"app-machines\",\r\n  templateUrl: \"./machines.component.html\",\r\n  styleUrls: [\"./machines.component.css\"]\r\n})\r\nexport class MachinesComponent implements OnInit {\r\n  public machines = [];\r\n  public errMsg;\r\n  constructor(private machineService: MachinesService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.machineService.getMachines().subscribe(\r\n      data => (this.machines = data),\r\n      error => (this.errMsg = error),\r\n      () => console.log(\"the sequence completed!\")\r\n    );\r\n  }\r\n}\r\n","<style>\r\n  div {\r\n    position: relative;\r\n    left: 250px;\r\n  }\r\n</style>\r\n<div>\r\n  <h3>Machines List</h3>\r\n  <a routerLink=\"/addmachine\">Add New</a>\r\n  <table class=\"table table-hover\" style=\"width: auto;\">\r\n    <thead>\r\n      <tr>\r\n        <th>\r\n          Machine Code\r\n        </th>\r\n        <th>\r\n          Description\r\n        </th>\r\n        <th>\r\n          Hourly Rent\r\n        </th>\r\n        <th>\r\n          Max Hours per Day\r\n        </th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor=\"let machine of machines\">\r\n        <td>{{ machine.machineCode }}</td>\r\n        <td>{{ machine.description }}</td>\r\n        <td>{{ machine.hrRent }}</td>\r\n        <td>{{ machine.maxHrPerDay }}</td>\r\n        <td><a routerLink=\"/editmachine/{{ machine.id }}\">Edit</a></td>\r\n        <td><a routerLink=\"/deletemachine/{{ machine.id }}\">Delete</a></td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n<router-outlet></router-outlet>\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport { catchError } from \"rxjs/operators\";\r\nimport { IMachines } from \"./machines\";\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class MachinesService {\r\n  private _url: string = \"https://localhost:44366/api/machines\";\r\n  constructor(private http: HttpClient) {}\r\n  getMachines(): Observable<IMachines[]> {\r\n    return this.http\r\n      .get<IMachines[]>(this._url)\r\n      .pipe(catchError(this.errorHandler));\r\n  }\r\n  errorHandler(error: HttpErrorResponse) {\r\n    return throwError(error.message || \"Server Error\");\r\n  }\r\n}\r\n","\nimport { AuthService } from '../shared/Auth.service';\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { AlertifyService } from '../shared/alertify.service';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  // tslint:disable-next-line: new-parens\n  @Output() cancelRegister = new EventEmitter;\n\n  model: any = {};\n\n  constructor(private authService: AuthService, private alertify: AlertifyService) { }\n\n  ngOnInit() {\n  }\n\n  register(){\n    this.authService.register(this.model)\n      .subscribe(() => {\n        this.alertify.success('Registration successful.');\n      }, error => {\n        this.alertify.error(error);\n      });\n  }\n\n  cancel(){\n    this.cancelRegister.emit(false);\n    console.log('cancelled');\n  }\n\n\n\n  \n}","<form #registerForm=\"ngForm\" (ngSubmit)=\"register()\">\n    <h2 class=\"text-center text-primary\">Sign Up</h2>\n    <hr>\n  \n    <div class=\"form-group\">\n      <input type=\"text\" class=\"form-control\" required name=\"username\" [(ngModel)]=\"model.username\" placeholder=\"Username\">\n    </div>\n  \n    <div class=\"form-group\">\n      <input type=\"password\" class=\"form-control\" required name=\"password\" [(ngModel)]=\"model.password\" placeholder=\"Password\">\n    </div>\n  \n    <div class=\"form-group text-center\">\n      <button class=\"btn btn-success\" type=\"submit\">Register</button>\n      <button class=\"btn btn-primary\" type=\"button\" (click)=\"cancel()\">Cancel</button>\n    </div>\n  \n  </form> ","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport {map} from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  baseUrl = 'https://localhost:44366/api/auth/';\r\n\r\nconstructor(private http: HttpClient) { }\r\n\r\nlogin(model: any) {\r\n  return this.http.post(this.baseUrl + 'login/', model)\r\n    .pipe(\r\n      map((response: any) => {\r\n        const user = response;\r\n        if (user) {\r\n          localStorage.setItem('token', user.token);\r\n        }\r\n      })\r\n    );\r\n}\r\nregister(model: any) {\r\n  return this.http.post(this.baseUrl + 'register', model);\r\n}\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport * as alertify from 'alertifyjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertifyService {\n\n  constructor() { }\n\n  confirm(message: string, okCallback: () => any) {\n    alertify.confirm(message, (e:any) => {\n      if (e) {\n        okCallback();\n      } else{}\n    });\n  }\n\n  success(message: string) {\n    alertify.success(message);\n  }\n\n  error(message: string) {\n    alertify.error(message);\n  }\n\n  warning(message: string) {\n    alertify.warning(message);\n  }\n\n  message(message: string) {\n    alertify.message(message);\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport {map} from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  baseUrl = 'https://localhost:44366/api/auth/';\r\n\r\nconstructor(private http: HttpClient) { }\r\n\r\nlogin(model: any) {\r\n  return this.http.post(this.baseUrl + 'login/', model)\r\n    .pipe(\r\n      map((response: any) => {\r\n        const user = response;\r\n        if (user) {\r\n          localStorage.setItem('token', user.token);\r\n        }\r\n      })\r\n    );\r\n}\r\nregister(model: any) {\r\n  return this.http.post(this.baseUrl + 'register', model);\r\n}\r\n\r\n}\r\n","\r\nimport { Injectable } from \"@angular/core\";\r\nimport { HttpInterceptor, HttpErrorResponse, HTTP_INTERCEPTORS } from \"@angular/common/http\";\r\nimport { catchError } from 'rxjs/operators';\r\nimport { throwError } from 'rxjs';\r\n\r\n\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n  intercept(\r\n    req: import('@angular/common/http').HttpRequest<any>,\r\n    next: import('@angular/common/http').HttpHandler\r\n  ): import('rxjs').Observable<import('@angular/common/http').HttpEvent<any>> {\r\n    return next.handle(req).pipe(\r\n        catchError(error => {\r\n            if (error.status === 401) {\r\n                return throwError(error.statusText);\r\n            }\r\n            if (error instanceof HttpErrorResponse) \r\n            {\r\n                const applicationError = error.headers.get('Application-Error');\r\n                if (applicationError) {\r\n                    return throwError (applicationError);\r\n                }\r\n                const serverError = error.error;\r\n                let modelStateErrors = '';\r\n                if (serverError.errors && typeof serverError.errors === 'object') {\r\n                    for (const key in serverError.errors){\r\n                        if (serverError.errors[key]) {\r\n                            modelStateErrors += serverError.errors[key] + '\\n';\r\n                        }\r\n                }\r\n             }\r\n                return throwError(modelStateErrors || serverError || 'Server Error');\r\n            }\r\n        })\r\n    )\r\n  }\r\n}\r\n\r\nexport const ErrorInterceptorProvider = {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: ErrorInterceptor,\r\n    multi: true\r\n}; ","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport { catchError } from \"rxjs/operators\";\r\nimport { IJobs } from \"./jobs\";\r\nimport { JobsModel } from \"./jobsModel\";\r\nimport { FormGroup } from \"@angular/forms\";\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class JobsService {\r\n  private _url: string = \"https://localhost:44366/api/jobs\";\r\n  constructor(private http: HttpClient) {}\r\n\r\n  public getJobs(): Observable<IJobs[]> {\r\n    return this.http\r\n      .get<IJobs[]>(this._url)\r\n      .pipe(catchError(this.errorHandler));\r\n  }\r\n  // addJobs(): Observable<IJobs[]>{\r\n  //   return this.http.post<IJobs[]>(this._url,)\r\n  // }\r\n  public addJob(job: JobsModel) {\r\n    return this.http\r\n      .post<any>(this._url, job)\r\n      .pipe(catchError(this.errorHandler));\r\n  }\r\n  public editJob(job: JobsModel, id: number) {\r\n    return this.http\r\n      .put<any>(this._url + \"/\" + id, job)\r\n      .pipe(catchError(this.errorHandler));\r\n  }\r\n  public deleteJob(id: number) {\r\n    return this.http\r\n      .delete<any>(this._url + \"/\" + id)\r\n      .pipe(catchError(this.errorHandler));\r\n  }\r\n  errorHandler(error: HttpErrorResponse) {\r\n    return throwError(error.message || \"Server Error\");\r\n  }\r\n}\r\n","export class JobsModel {\r\n  constructor(\r\n    public Id: number,\r\n    public JobCode: string,\r\n    public Description: string,\r\n    public HrRate: number,\r\n    public MaxHrPerDay: number\r\n  ) {}\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport { catchError } from \"rxjs/operators\";\r\nimport { IMachines } from \"./machines\";\r\n\r\nimport { MachinesModel } from \"./machinesModel\";\r\nimport { FormGroup } from \"@angular/forms\";\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class MachinesService {\r\n  private _url: string = \"https://localhost:44366/api/machines\";\r\n  constructor(private http: HttpClient) {}\r\n  getMachines(): Observable<IMachines[]> {\r\n    return this.http\r\n      .get<IMachines[]>(this._url)\r\n      .pipe(catchError(this.errorHandler));\r\n  }\r\n  public addMachine(machine: MachinesModel) {\r\n    return this.http\r\n      .post<any>(this._url, machine)\r\n      .pipe(catchError(this.errorHandler));\r\n  }\r\n  public editMachine(machine: MachinesModel, id: number) {\r\n    return this.http\r\n      .put<any>(this._url + \"/\" + id, machine)\r\n      .pipe(catchError(this.errorHandler));\r\n  }\r\n  public deleteMachine(id: number) {\r\n    return this.http\r\n      .delete<any>(this._url + \"/\" + id)\r\n      .pipe(catchError(this.errorHandler));\r\n  }\r\n  errorHandler(error: HttpErrorResponse) {\r\n    return throwError(error.message || \"Server Error\");\r\n  }\r\n}\r\n","export class MachinesModel {\r\n  constructor(\r\n    public Id: number,\r\n    public MachineCode: string,\r\n    public Description: string,\r\n    public HrRent: number,\r\n    public MaxHrPerDay: number\r\n  ) {}\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-timecards',\r\n  templateUrl: './timecards.component.html',\r\n  styleUrls: ['./timecards.component.css']\r\n})\r\nexport class TimecardsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}