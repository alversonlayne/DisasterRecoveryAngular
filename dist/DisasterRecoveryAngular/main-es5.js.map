{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app-routing.module.ts","webpack:///src/app/add-job/add-job.component.ts","webpack:///src/app/add-job/add-job.component.html","webpack:///src/app/add-machine/add-machine.component.ts","webpack:///src/app/add-machine/add-machine.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/auth.component.ts","webpack:///src/app/auth/auth.component.html","webpack:///src/app/delete-job/delete-job.component.ts","webpack:///src/app/delete-job/delete-job.component.html","webpack:///src/app/delete-machine/delete-machine.component.ts","webpack:///src/app/delete-machine/delete-machine.component.html","webpack:///src/app/edit-job/edit-job.component.ts","webpack:///src/app/edit-job/edit-job.component.html","webpack:///src/app/edit-machine/edit-machine.component.ts","webpack:///src/app/edit-machine/edit-machine.component.html","webpack:///src/app/jobs/jobs.component.ts","webpack:///src/app/jobs/jobs.component.html","webpack:///src/app/jobs/jobs.service.ts","webpack:///src/app/machines/machines.component.ts","webpack:///src/app/machines/machines.component.html","webpack:///src/app/machines/machines.service.ts","webpack:///src/app/shared/auth.service.ts","webpack:///src/app/shared/jobs.service.ts","webpack:///src/app/shared/jobsModel.ts","webpack:///src/app/shared/machines.service.ts","webpack:///src/app/shared/machinesModel.ts","webpack:///src/app/timecards/timecards.component.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AddJobComponent","jobsServise","jobModel","undefined","submitted","errorMsg","console","log","addJob","subscribe","Response","error","statusText","onSubmit","selector","templateUrl","styleUrls","AddMachineComponent","machineService","machineModel","alert","addMachine","AppComponent","title","AppModule","declarations","providers","bootstrap","AuthComponent","authService","model","login","next","DeleteJobComponent","jobService","activatedRoute","location","snapshot","params","deleteJob","data","jobs","back","delete","backClicked","DeleteMachineComponent","EditJobComponent","Id","editJob","EditMachineComponent","JobsComponent","getJobs","errMsg","JobsService","http","_url","get","pipe","errorHandler","job","post","message","providedIn","MachinesComponent","machines","getMachines","MachinesService","AuthService","baseUrl","response","user","localStorage","setItem","token","put","JobsModel","JobCode","Description","HrRate","MaxHrPerDay","machine","MachinesModel","MachineCode","HrRent","TimecardsComponent","environment","production","bootstrapModule","catch","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\n\r\nimport { JobsComponent } from \"./app/jobs/jobs.component\";\r\nimport { MachinesComponent } from \"./app/machines/machines.component\";\r\nimport { TimecardsComponent } from \"./app/timecards/timecards.component\";\r\nimport { AddJobComponent } from \"./app/add-job/add-job.component\";\r\nimport { EditJobComponent } from \"./app/edit-job/edit-job.component\";\r\nimport { DeleteJobComponent } from \"./app/delete-job/delete-job.component\";\r\nimport { AddMachineComponent } from \"./app/add-machine/add-machine.component\";\r\nimport { EditMachineComponent } from \"./app/edit-machine/edit-machine.component\";\r\nimport { DeleteMachineComponent } from \"./app/delete-machine/delete-machine.component\";\r\n\r\nconst routes: Routes = [\r\n  { path: \"\", redirectTo: \"/\", pathMatch: \"full\" },\r\n  { path: \"jobs\", component: JobsComponent },\r\n  { path: \"machines\", component: MachinesComponent },\r\n  { path: \"timecards\", component: TimecardsComponent },\r\n  { path: \"addjob\", component: AddJobComponent },\r\n  { path: \"editjob/:id\", component: EditJobComponent },\r\n  { path: \"deletejob/:id\", component: DeleteJobComponent },\r\n  { path: \"addmachine\", component: AddMachineComponent },\r\n  { path: \"editmachine/:id\", component: EditMachineComponent },\r\n  { path: \"deletemachine/:id\", component: DeleteMachineComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component, OnInit } from \"@angular/core\";\r\n\r\nimport { JobsService } from \"../shared/jobs.service\";\r\nimport { JobsModel } from \"../shared/jobsModel\";\r\nimport { IJobs } from \"../shared/jobs\";\r\n// import { FormBuilder, FormGroup, FormControl } from \"@angular/forms\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\n\r\n@Component({\r\n  selector: \"app-add-job\",\r\n  templateUrl: \"./add-job.component.html\",\r\n  styleUrls: [\"./add-job.component.css\"]\r\n})\r\nexport class AddJobComponent implements OnInit {\r\n\r\n  //timecard = { Id: null, Name: null, DateCreated: null, isConfirmed: null };\r\n  jobModel = new JobsModel(undefined, \"\", \"\", null, null);\r\n  //jobs: Observable<IJobs>;\r\n\r\n  submitted: boolean = false;\r\n  errorMsg = \"\";\r\n  constructor(private jobsServise: JobsService) {}\r\n\r\n  ngOnInit(): void {\r\n    //this.onSubmit();\r\n\r\n    //s console.log(this.jobModel);\r\n  }\r\n  onSubmit() {\r\n    console.log(this.jobModel);\r\n    this.submitted = true;\r\n    // this.jobModel.Id = 10;\r\n    this.jobsServise.addJob(this.jobModel).subscribe(\r\n      Response => console.log(\"Successfully added new job.\", Response),\r\n      error => (this.errorMsg = error.statusText)\r\n    );\r\n  }\r\n}\r\n","<style>\r\n  div {\r\n    position: relative;\r\n    left: 250px;\r\n  }\r\n</style>\r\n<div>\r\n  <div class=\"form-group\">\r\n\r\n    <h3>Add New Job</h3>\r\n    <label>Job Code</label>\r\n    <p>\r\n      <input class=\"form-control\" type=\"text\" [(ngModel)]=\"jobModel.JobCode\" />\r\n    </p>\r\n    <label>Description</label>\r\n    <p>\r\n      <input\r\n        class=\"form-control\"\r\n        type=\"text\"\r\n\r\n        [(ngModel)]=\"jobModel.Description\"\r\n      />\r\n    </p>\r\n    <label>Hourly Rate</label>\r\n    <p>\r\n\r\n      <input class=\"form-control\" type=\"text\" [(ngModel)]=\"jobModel.HrRate\" />\r\n    </p>\r\n    <label>Max Hours per Day</label>\r\n    <p>\r\n      <input\r\n        class=\"form-control\"\r\n        type=\"text\"\r\n\r\n        [(ngModel)]=\"jobModel.MaxHrPerDay\"\r\n      />\r\n    </p>\r\n    <button class=\"btn btn-primary\" type=\"submit\" (click)=\"onSubmit()\">\r\n      Register\r\n    </button>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, FormControl } from \"@angular/forms\";\r\nimport { MachinesService } from \"../shared/machines.service\";\r\nimport { MachinesModel } from \"../shared/machinesModel\";\r\n//test\r\n\r\n@Component({\r\n  selector: \"app-add-machine\",\r\n  templateUrl: \"./add-machine.component.html\",\r\n  styleUrls: [\"./add-machine.component.css\"]\r\n})\r\nexport class AddMachineComponent implements OnInit {\r\n  submitted = false;\r\n  errorMsg = \"\";\r\n  machineModel = new MachinesModel(undefined, null, \"\", null, null);\r\n  constructor(private machineService: MachinesService) {}\r\n\r\n  ngOnInit(): void {}\r\n  success() {\r\n    alert(\"Successfully added machine!\");\r\n  }\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    this.machineService.addMachine(this.machineModel).subscribe(\r\n      Response => console.log(\"success!\", Response),\r\n      error => (this.errorMsg = error.statusText)\r\n    );\r\n  }\r\n}\r\n","<style>\r\n  div {\r\n    position: relative;\r\n    left: 250px;\r\n  }\r\n</style>\r\n<div>\r\n  <div class=\"form-group\">\r\n    <h3>Add New Machine</h3>\r\n    <label>Machine Code</label>\r\n    <p>\r\n      <input\r\n        class=\"form-control\"\r\n        type=\"text\"\r\n        [(ngModel)]=\"machineModel.MachineCode\"\r\n      />\r\n    </p>\r\n    <label>Description</label>\r\n    <p>\r\n      <input\r\n        class=\"form-control\"\r\n        type=\"text\"\r\n        [(ngModel)]=\"machineModel.Description\"\r\n      />\r\n    </p>\r\n    <label>Hourly Rate</label>\r\n    <p>\r\n      <input\r\n        class=\"form-control\"\r\n        type=\"text\"\r\n        [(ngModel)]=\"machineModel.HrRent\"\r\n      />\r\n    </p>\r\n    <label>Max Hours per Day</label>\r\n    <p>\r\n      <input\r\n        class=\"form-control\"\r\n        type=\"text\"\r\n        [(ngModel)]=\"machineModel.MaxHrPerDay\"\r\n      />\r\n    </p>\r\n    <button class=\"btn btn-primary\" type=\"submit\" (click)=\"onSubmit()\">\r\n      Register\r\n    </button>\r\n  </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'DisasterRecoveryAngular';\r\n}\r\n","<!DOCTYPE html>\r\n<html>\r\n  <head>\r\n    <style>\r\n      ul {\r\n        list-style-type: none;\r\n        margin: 0;\r\n        padding: 0;\r\n        overflow: hidden;\r\n        background-color: #333;\r\n      }\r\n\r\n      li {\r\n        float: left;\r\n      }\r\n\r\n      li a {\r\n        display: block;\r\n        color: white;\r\n        text-align: center;\r\n        padding: 14px 16px;\r\n        text-decoration: none;\r\n      }\r\n      .vertical-menu {\r\n        width: 200px;\r\n        list-style-type: none;\r\n        margin: 0;\r\n        padding: 0;\r\n        width: 15%;\r\n        background-color: #f1f1f1;\r\n        height: 100%; /* Full height */\r\n        position: fixed; /* Make it stick, even on scroll */\r\n        overflow: auto;\r\n      }\r\n\r\n      .vertical-menu a {\r\n        background-color: #eee;\r\n        color: black;\r\n        display: block;\r\n        padding: 12px;\r\n        text-decoration: none;\r\n      }\r\n\r\n      .vertical-menu a:hover {\r\n        background-color: #ccc;\r\n      }\r\n\r\n      .vertical-menu a.active {\r\n        background-color: #4caf50;\r\n        color: white;\r\n      }\r\n    </style>\r\n  </head>\r\n  <body>\r\n    <ul>\r\n      <li><a>Disaster Recovery Application</a></li>\r\n      <app-auth></app-auth>\r\n    </ul>\r\n\r\n    <div class=\"vertical-menu\">\r\n      <a routerLink=\"/jobs\">Job Code Management</a>\r\n      <a routerLink=\"/machines\">Machine Management</a>\r\n      <a href=\"#\"> </a>\r\n      <a href=\"#\">Timecard Approval</a>\r\n    </div>\r\n\r\n    <div>\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </body>\r\n</html>\r\n","import { BrowserModule } from \"@angular/platform-browser\";\r\nimport { NgModule } from \"@angular/core\";\r\n\r\nimport { AppRoutingModule } from \"../app-routing.module\";\r\nimport { AppComponent } from \"./app.component\";\r\nimport { JobsComponent } from \"./jobs/jobs.component\";\r\nimport { MachinesComponent } from \"./machines/machines.component\";\r\nimport { TimecardsComponent } from \"./timecards/timecards.component\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { AddJobComponent } from \"./add-job/add-job.component\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { EditJobComponent } from './edit-job/edit-job.component';\r\nimport { DeleteJobComponent } from './delete-job/delete-job.component';\r\nimport { AddMachineComponent } from './add-machine/add-machine.component';\r\nimport { EditMachineComponent } from './edit-machine/edit-machine.component';\r\nimport { DeleteMachineComponent } from './delete-machine/delete-machine.component';\nimport { AuthComponent } from './auth/auth.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    JobsComponent,\r\n    MachinesComponent,\r\n    TimecardsComponent,\r\n    AddJobComponent,\r\n    EditJobComponent,\r\n    DeleteJobComponent,\r\n    AddMachineComponent,\r\n    EditMachineComponent,\r\n    DeleteMachineComponent,\r\n    AuthComponent\r\n  ],\r\n  imports: [BrowserModule, AppRoutingModule, HttpClientModule, FormsModule],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from \"../shared/auth.service\";\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.css']\n})\nexport class AuthComponent implements OnInit {\n\n  model: any ={};\n  constructor( private authService: AuthService) {}\n\n  ngOnInit(): void {\n  }\n\n  \nlogin() {\n\n  this.authService.login(this.model).subscribe(next => {\n    console.log(\"successful login\");\n  }, error => {\n    console.log(\"login failed\");\n   });\n}\n\n}\n","<form #loginForm=\"ngForm\" class=\"form-inline mt-2 mt-md-0\" (ngSubmit) = \"login()\">\n    <input class=\"form-control mr-sm-2\" type=\"text\" name=\"username\" placeholder=\"Username\" required [(ngModel)]=\"model.username\">\n    <input class=\"form-control mr-sm-2\" type=\"password\" name=\"password\" placeholder=\"Password\" required [(ngModel)]=\"model.password\">\n    <button [disabled]=\"!loginForm.valid\" class=\"btn btn-success\" type=\"submit\">Login</button>\n  </form>\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { JobsService } from \"../shared/jobs.service\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { Location } from \"@angular/common\";\r\n@Component({\r\n  selector: \"app-delete-job\",\r\n  templateUrl: \"./delete-job.component.html\",\r\n  styleUrls: [\"./delete-job.component.css\"]\r\n})\r\nexport class DeleteJobComponent implements OnInit {\r\n  errorMsg = \"\";\r\n  id: number;\r\n  public jobs;\r\n  constructor(\r\n    private jobService: JobsService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private location: Location\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n  delete() {\r\n    this.id = this.activatedRoute.snapshot.params[\"id\"];\r\n    this.jobService.deleteJob(this.id).subscribe(\r\n      data => (this.jobs = data),\r\n      error => (this.errorMsg = error),\r\n      () => console.log(\"the sequene completed!\")\r\n    );\r\n    alert(\"Successfully deleted!\");\r\n  }\r\n  backClicked() {\r\n    this.location.back();\r\n  }\r\n}\r\n","<style>\r\n  div {\r\n    position: relative;\r\n    left: 250px;\r\n  }\r\n</style>\r\n\r\n<div>\r\n  <p>Are you sure to delete this employee?</p>\r\n  <button (click)=\"delete()\">Yes</button>\r\n  <br />\r\n  <button (click)=\"backClicked()\">Go Back</button>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-delete-machine',\r\n  templateUrl: './delete-machine.component.html',\r\n  styleUrls: ['./delete-machine.component.css']\r\n})\r\nexport class DeleteMachineComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>delete-machine works!</p>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { JobsModel } from \"../shared/jobsModel\";\r\nimport { JobsService } from \"../shared/jobs.service\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TimecardsComponent } from \"../timecards/timecards.component\";\r\n@Component({\r\n  selector: \"app-edit-job\",\r\n  templateUrl: \"./edit-job.component.html\",\r\n  styleUrls: [\"./edit-job.component.css\"]\r\n})\r\nexport class EditJobComponent implements OnInit {\r\n  submitted = false;\r\n  errorMsg = \"\";\r\n  id: number;\r\n  public jobs;\r\n  jobModel = new JobsModel(undefined, \"\", \"\", null, null);\r\n  constructor(\r\n    private jobService: JobsService,\r\n    private activatedRoute: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.id = this.activatedRoute.snapshot.params[\"id\"];\r\n    this.jobModel.Id = this.id;\r\n  }\r\n  onSubmit() {\r\n    console.log(this.jobModel);\r\n\r\n    this.submitted = true;\r\n    this.jobService.editJob(this.jobModel, this.id).subscribe();\r\n  }\r\n}\r\n","<style>\r\n  div {\r\n    position: relative;\r\n    left: 250px;\r\n  }\r\n</style>\r\n<div>\r\n  <label>ID</label>\r\n  <p>\r\n    <input disabled type=\"text\" [(ngModel)]=\"jobModel.Id\" />\r\n  </p>\r\n\r\n  <label>Job Code</label>\r\n  <p>\r\n    <input required type=\"text\" [(ngModel)]=\"jobModel.JobCode\" />\r\n  </p>\r\n\r\n  <label>Description</label>\r\n  <p>\r\n    <input type=\"text\" [(ngModel)]=\"jobModel.Description\" />\r\n  </p>\r\n  <label>Hourly Rate</label>\r\n  <p>\r\n    <input type=\"text\" [(ngModel)]=\"jobModel.HrRate\" />\r\n  </p>\r\n  <label>Max Hour per Day</label>\r\n  <p>\r\n    <input type=\"text\" [(ngModel)]=\"jobModel.MaxHrPerDay\" />\r\n  </p>\r\n  <button class=\"btn btn-primary\" type=\"submit\" (click)=\"onSubmit()\">\r\n    Register\r\n  </button>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-edit-machine',\r\n  templateUrl: './edit-machine.component.html',\r\n  styleUrls: ['./edit-machine.component.css']\r\n})\r\nexport class EditMachineComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>edit-machine works!</p>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { JobsService } from \"../jobs/jobs.service\";\r\n  import { from } from 'rxjs';\r\n\r\n@Component({\r\n  selector: \"app-jobs\",\r\n  templateUrl: \"./jobs.component.html\",\r\n  styleUrls: [\"./jobs.component.css\"]\r\n})\r\n\r\nexport class JobsComponent implements OnInit {\r\n  public jobs = [];\r\n  public errMsg;\r\n\r\n  constructor(private jobService: JobsService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.jobService.getJobs().subscribe(\r\n      data => (this.jobs = data),\r\n      error => (this.errMsg = error),\r\n      () => console.log(\"the sequence completed!\")\r\n    );\r\n  }\r\n}\r\n","<style>\r\n  div {\r\n    position: relative;\r\n    left: 250px;\r\n  }\r\n</style>\r\n<div>\r\n  <h3>Jobs List</h3>\r\n  <a routerLink=\"/addjob\">Add New</a>\r\n  <table class=\"table table-hover\" style=\"width: auto;\">\r\n    <thead>\r\n      <tr>\r\n        <th>\r\n          Job Code\r\n        </th>\r\n        <th>\r\n          Description\r\n        </th>\r\n        <th>\r\n          Hourly Rate\r\n        </th>\r\n        <th>\r\n          Max Hours per Day\r\n        </th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor=\"let job of jobs\">\r\n        <td>{{ job.jobCode }}</td>\r\n        <td>{{ job.description }}</td>\r\n        <td>{{ job.hrRate }}</td>\r\n        <td>{{ job.maxHrPerDay }}</td>\r\n        <td>\r\n          <a routerLink=\"/editjob/{{ job.id }}\">\r\n            Edit\r\n          </a>\r\n        </td>\r\n        <td>\r\n          <a routerLink=\"/deletejob/{{ job.id }}\">\r\n            Delete\r\n          </a>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n<router-outlet></router-outlet>\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport { catchError } from \"rxjs/operators\";\r\nimport { IJobs } from \"./jobs\";\r\nimport { JobsModel } from \"./jobsModel\";\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class JobsService {\r\n  private _url: string = \"https://localhost:44366/api/jobs\";\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getJobs(): Observable<IJobs[]> {\r\n    return this.http\r\n      .get<IJobs[]>(this._url)\r\n      .pipe(catchError(this.errorHandler));\r\n  }\r\n  // addJobs(): Observable<IJobs[]>{\r\n  //   return this.http.post<IJobs[]>(this._url,)\r\n  // }\r\n  addJob(job: JobsModel) {\r\n    return this.http\r\n      .post<any>(this._url, job)\r\n      .pipe(catchError(this.errorHandler));\r\n  }\r\n  errorHandler(error: HttpErrorResponse) {\r\n    return throwError(error.message || \"Server Error\");\r\n  }\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { MachinesService } from \"../machines/machines.service\";\r\n\r\n@Component({\r\n  selector: \"app-machines\",\r\n  templateUrl: \"./machines.component.html\",\r\n  styleUrls: [\"./machines.component.css\"]\r\n})\r\nexport class MachinesComponent implements OnInit {\r\n  public machines = [];\r\n  public errMsg;\r\n  constructor(private machineService: MachinesService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.machineService.getMachines().subscribe(\r\n      data => (this.machines = data),\r\n      error => (this.errMsg = error),\r\n      () => console.log(\"the sequence completed!\")\r\n    );\r\n  }\r\n}\r\n","<style>\r\n  div {\r\n    position: relative;\r\n    left: 250px;\r\n  }\r\n</style>\r\n<div>\r\n  <h3>Machines List</h3>\r\n  <a routerLink=\"/addmachine\">Add New</a>\r\n  <table class=\"table table-hover\" style=\"width: auto;\">\r\n    <thead>\r\n      <tr>\r\n        <th>\r\n          Machine Code\r\n        </th>\r\n        <th>\r\n          Description\r\n        </th>\r\n        <th>\r\n          Hourly Rent\r\n        </th>\r\n        <th>\r\n          Max Hours per Day\r\n        </th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor=\"let machine of machines\">\r\n        <td>{{ machine.machineCode }}</td>\r\n        <td>{{ machine.description }}</td>\r\n        <td>{{ machine.hrRent }}</td>\r\n        <td>{{ machine.maxHrPerDay }}</td>\r\n        <td><a routerLink=\"/editmachine/{{ machine.id }}\">Edit</a></td>\r\n        <td><a routerLink=\"/deletemachine/{{ machine.id }}\">Delete</a></td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n<router-outlet></router-outlet>\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport { catchError } from \"rxjs/operators\";\r\nimport { IMachines } from \"./machines\";\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class MachinesService {\r\n  private _url: string = \"https://localhost:44366/api/machines\";\r\n  constructor(private http: HttpClient) {}\r\n  getMachines(): Observable<IMachines[]> {\r\n    return this.http\r\n      .get<IMachines[]>(this._url)\r\n      .pipe(catchError(this.errorHandler));\r\n  }\r\n  errorHandler(error: HttpErrorResponse) {\r\n    return throwError(error.message || \"Server Error\");\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport {map} from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  baseUrl = 'https://localhost:44366/api/auth';\r\n\r\nconstructor(private http: HttpClient) { }\r\n\r\nlogin(model: any) {\r\n  return this.http.post(this.baseUrl + '/login/', model)\r\n    .pipe(\r\n      map((response: any) => {\r\n        const user = response;\r\n        if (user) {\r\n          localStorage.setItem('token', user.token);\r\n        }\r\n      })\r\n    )\r\n}\r\n\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport { catchError } from \"rxjs/operators\";\r\nimport { IJobs } from \"./jobs\";\r\nimport { JobsModel } from \"./jobsModel\";\r\nimport { FormGroup } from \"@angular/forms\";\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class JobsService {\r\n  private _url: string = \"https://localhost:44366/api/jobs\";\r\n  constructor(private http: HttpClient) {}\r\n\r\n  public getJobs(): Observable<IJobs[]> {\r\n    return this.http\r\n      .get<IJobs[]>(this._url)\r\n      .pipe(catchError(this.errorHandler));\r\n  }\r\n  // addJobs(): Observable<IJobs[]>{\r\n  //   return this.http.post<IJobs[]>(this._url,)\r\n  // }\r\n  public addJob(job: JobsModel) {\r\n    return this.http\r\n      .post<any>(this._url, job)\r\n      .pipe(catchError(this.errorHandler));\r\n  }\r\n  public editJob(job: JobsModel, id: number) {\r\n    return this.http\r\n      .put<any>(this._url + \"/\" + id, job)\r\n      .pipe(catchError(this.errorHandler));\r\n  }\r\n  public deleteJob(id: number) {\r\n    return this.http\r\n      .delete<any>(this._url + \"/\" + id)\r\n      .pipe(catchError(this.errorHandler));\r\n  }\r\n  errorHandler(error: HttpErrorResponse) {\r\n    return throwError(error.message || \"Server Error\");\r\n  }\r\n}\r\n","export class JobsModel {\r\n  constructor(\r\n    public Id: number,\r\n    public JobCode: string,\r\n    public Description: string,\r\n    public HrRate: number,\r\n    public MaxHrPerDay: number\r\n  ) {}\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport { catchError } from \"rxjs/operators\";\r\nimport { IMachines } from \"./machines\";\r\n\r\nimport { MachinesModel } from \"./machinesModel\";\r\nimport { FormGroup } from \"@angular/forms\";\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class MachinesService {\r\n  private _url: string = \"https://localhost:44366/api/machines\";\r\n  constructor(private http: HttpClient) {}\r\n  getMachines(): Observable<IMachines[]> {\r\n    return this.http\r\n      .get<IMachines[]>(this._url)\r\n      .pipe(catchError(this.errorHandler));\r\n  }\r\n  public addMachine(machine: MachinesModel) {\r\n    return this.http\r\n      .post<any>(this._url, machine)\r\n      .pipe(catchError(this.errorHandler));\r\n  }\r\n  public editMachine(machine: MachinesModel, id: number) {\r\n    return this.http\r\n      .put<any>(this._url + \"/\" + id, machine)\r\n      .pipe(catchError(this.errorHandler));\r\n  }\r\n  public deleteMachine(id: number) {\r\n    return this.http\r\n      .delete<any>(this._url + \"/\" + id)\r\n      .pipe(catchError(this.errorHandler));\r\n  }\r\n  errorHandler(error: HttpErrorResponse) {\r\n    return throwError(error.message || \"Server Error\");\r\n  }\r\n}\r\n","export class MachinesModel {\r\n  constructor(\r\n    public Id: number,\r\n    public MachineCode: string,\r\n    public Description: string,\r\n    public HrRent: number,\r\n    public MaxHrPerDay: number\r\n  ) {}\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-timecards',\r\n  templateUrl: './timecards.component.html',\r\n  styleUrls: ['./timecards.component.css']\r\n})\r\nexport class TimecardsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}