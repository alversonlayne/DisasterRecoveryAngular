{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app-routing.module.ts","webpack:///src/app/add-job/add-job.component.ts","webpack:///src/app/add-job/add-job.component.html","webpack:///src/app/add-machine/add-machine.component.ts","webpack:///src/app/add-machine/add-machine.component.html","webpack:///src/app/add-timecard/add-timecard.component.ts","webpack:///src/app/add-timecard/add-timecard.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/auth.component.ts","webpack:///src/app/auth/auth.component.html","webpack:///src/app/delete-job/delete-job.component.ts","webpack:///src/app/delete-job/delete-job.component.html","webpack:///src/app/delete-machine/delete-machine.component.ts","webpack:///src/app/delete-machine/delete-machine.component.html","webpack:///src/app/delete-timecard/delete-timecard.component.ts","webpack:///src/app/delete-timecard/delete-timecard.component.html","webpack:///src/app/edit-job/edit-job.component.ts","webpack:///src/app/edit-job/edit-job.component.html","webpack:///src/app/edit-machine/edit-machine.component.ts","webpack:///src/app/edit-machine/edit-machine.component.html","webpack:///src/app/edit-timecard/edit-timecard.component.ts","webpack:///src/app/edit-timecard/edit-timecard.component.html","webpack:///src/app/jobs/jobs.component.ts","webpack:///src/app/jobs/jobs.component.html","webpack:///src/app/machines/machines.component.ts","webpack:///src/app/machines/machines.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/shared/Auth.service.ts","webpack:///src/app/shared/alertify.service.ts","webpack:///src/app/shared/auth.service.ts","webpack:///src/app/shared/error.interceptor.ts","webpack:///src/app/shared/job-timecard.service.ts","webpack:///src/app/shared/job-timecardModel.ts","webpack:///src/app/shared/jobs.service.ts","webpack:///src/app/shared/jobsModel.ts","webpack:///src/app/shared/machine-timecard.service.ts","webpack:///src/app/shared/machine-timecardModel.ts","webpack:///src/app/shared/machines.service.ts","webpack:///src/app/shared/machinesModel.ts","webpack:///src/app/shared/timecardModel.ts","webpack:///src/app/shared/timecards.service.ts","webpack:///src/app/submit-timecard/submit-timecard.component.ts","webpack:///src/app/submit-timecard/submit-timecard.component.html","webpack:///src/app/timecard-detail/timecard-detail.component.ts","webpack:///src/app/timecard-detail/timecard-detail.component.html","webpack:///src/app/timecards/timecards.component.ts","webpack:///src/app/timecards/timecards.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AddJobComponent","jobsServise","jobModel","undefined","submitted","errorMsg","console","log","addJob","subscribe","Response","error","statusText","onSubmit","selector","templateUrl","styleUrls","AddMachineComponent","machineService","machineModel","alert","addMachine","AddTimecardComponent","timecardService","jobService","jobtimecardService","machinetimecardService","timecardModel","jobtimecardModel","machinetimecardModel","jobs","machines","timecards","getJobs","data","errMsg","getMachines","getTimecards","j","i","length","TimecardId","addTimecard","success","AppComponent","authService","jwtHelper","token","localStorage","getItem","decodedToken","decodeToken","AppModule","declarations","providers","bootstrap","AuthComponent","alertify","registerMode","model","login","next","loggedIn","removeItem","message","DeleteJobComponent","activatedRoute","location","snapshot","params","deleteJob","back","delete","backClicked","DeleteMachineComponent","_location","deleteMachine","DeleteTimecardComponent","deleteTimecard","timecard","EditJobComponent","Id","editJob","EditMachineComponent","editMachine","EditTimecardComponent","updateTimecard","JobsComponent","MachinesComponent","RegisterComponent","cancelRegister","register","emit","cancel","AuthService","http","baseUrl","post","pipe","response","user","setItem","isTokenExpired","providedIn","AlertifyService","okCallback","ErrorInterceptor","handle","status","applicationError","headers","get","serverError","modelStateErrors","errors","key","ErrorInterceptorProvider","provide","useClass","multi","JobTimecardService","_url","errorHandler","job","put","JobTimecardModel","JobId","JobsService","JobsModel","JobCode","Description","HrRate","MaxHrPerDay","MachineTimecardService","machine","MachineTimecardModel","MachineId","MachinesService","MachinesModel","MachineCode","HrRent","TimecardModel","Name","DateCreated","isConfirmed","SiteCode","TotalJobHours","TotalMachineHours","TotalJobAmount","TotalMachineAmount","TimecardsService","SubmitTimecardComponent","TimecardDetailComponent","tempjobs","getTimecardDetail","TimecardsComponent","environment","production","bootstrapModule","catch","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\n\r\nimport { JobsComponent } from \"./app/jobs/jobs.component\";\r\nimport { MachinesComponent } from \"./app/machines/machines.component\";\r\nimport { TimecardsComponent } from \"./app/timecards/timecards.component\";\r\nimport { AddJobComponent } from \"./app/add-job/add-job.component\";\r\nimport { EditJobComponent } from \"./app/edit-job/edit-job.component\";\r\nimport { DeleteJobComponent } from \"./app/delete-job/delete-job.component\";\r\nimport { AddMachineComponent } from \"./app/add-machine/add-machine.component\";\r\nimport { EditMachineComponent } from \"./app/edit-machine/edit-machine.component\";\r\nimport { DeleteMachineComponent } from \"./app/delete-machine/delete-machine.component\";\r\nimport { SubmitTimecardComponent } from './app/submit-timecard/submit-timecard.component';\r\nimport { AddTimecardComponent } from './app/add-timecard/add-timecard.component';\r\n\r\nconst routes: Routes = [\r\n  { path: \"\", redirectTo: \"/\", pathMatch: \"full\" },\r\n  { path: \"jobs\", component: JobsComponent },\r\n  { path: \"machines\", component: MachinesComponent },\r\n  { path: \"timecards\", component: TimecardsComponent },\r\n  { path: \"addjob\", component: AddJobComponent },\r\n  { path: \"editjob/:id\", component: EditJobComponent },\r\n  { path: \"submittimecard\", component: SubmitTimecardComponent },\r\n  { path: \"addtimecard\", component: AddTimecardComponent },\r\n  { path: \"deletejob/:id\", component: DeleteJobComponent },\r\n  { path: \"/addmachine\", component: AddMachineComponent },\r\n  { path: \"editmachine/:id\", component: EditMachineComponent },\r\n  { path: \"deletemachine/:id\", component: DeleteMachineComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { JobsService } from \"../shared/jobs.service\";\r\nimport { JobsModel } from \"../shared/jobsModel\";\r\nimport { IJobs } from \"../shared/jobs\";\r\n// import { FormBuilder, FormGroup, FormControl } from \"@angular/forms\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\n\r\n@Component({\r\n  selector: \"app-add-job\",\r\n  templateUrl: \"./add-job.component.html\",\r\n  styleUrls: [\"./add-job.component.css\"]\r\n})\r\nexport class AddJobComponent implements OnInit {\r\n  jobModel = new JobsModel(undefined, \"\", \"\", null, null);\r\n\r\n  submitted: boolean = false;\r\n  errorMsg = \"\";\r\n  constructor(private jobsServise: JobsService) {}\r\n\r\n  ngOnInit(): void {\r\n    //this.onSubmit();\r\n    //s console.log(this.jobModel);\r\n  }\r\n  onSubmit() {\r\n    console.log(this.jobModel);\r\n    this.submitted = true;\r\n    //this.jobModel.Id = 10;\r\n    this.jobsServise.addJob(this.jobModel).subscribe(\r\n      Response => console.log(\"Successfully added new job.\", Response),\r\n      error => (this.errorMsg = error.statusText)\r\n    );\r\n  }\r\n}\r\n","<style>\r\n  input {\r\n    width: auto;\r\n  }\r\n</style>\r\n<div style=\"margin-left:15%;padding:1px 16px;\">\r\n  <div class=\"form-group\">\r\n\r\n    <h3>Add New Job</h3>\r\n    <label>Job Code</label>\r\n    <p>\r\n      <input class=\"form-control\" type=\"text\" [(ngModel)]=\"jobModel.JobCode\" />\r\n    </p>\r\n    <label>Description</label>\r\n    <p>\r\n      <input\r\n        class=\"form-control\"\r\n        type=\"text\"\r\n\r\n        [(ngModel)]=\"jobModel.Description\"\r\n      />\r\n    </p>\r\n    <label>Hourly Rate</label>\r\n    <p>\r\n\r\n      <input class=\"form-control\" type=\"text\" [(ngModel)]=\"jobModel.HrRate\" />\r\n    </p>\r\n    <label>Max Hours per Day</label>\r\n    <p>\r\n      <input\r\n        class=\"form-control\"\r\n        type=\"text\"\r\n\r\n        [(ngModel)]=\"jobModel.MaxHrPerDay\"\r\n      />\r\n    </p>\r\n    <button class=\"btn btn-primary\" type=\"submit\" (click)=\"onSubmit()\">\r\n      Register\r\n    </button>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, FormControl } from \"@angular/forms\";\r\nimport { MachinesService } from \"../shared/machines.service\";\r\nimport { MachinesModel } from \"../shared/machinesModel\";\r\n@Component({\r\n  selector: \"app-add-machine\",\r\n  templateUrl: \"./add-machine.component.html\",\r\n  styleUrls: [\"./add-machine.component.css\"]\r\n})\r\nexport class AddMachineComponent implements OnInit {\r\n  submitted = false;\r\n  errorMsg = \"\";\r\n  machineModel = new MachinesModel(undefined, null, \"\", null, null);\r\n  constructor(private machineService: MachinesService) {}\r\n\r\n  ngOnInit(): void {}\r\n  success() {\r\n    alert(\"Successfully added machine!\");\r\n  }\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    this.machineService.addMachine(this.machineModel).subscribe(\r\n      Response => console.log(\"success!\", Response),\r\n      error => (this.errorMsg = error.statusText)\r\n    );\r\n  }\r\n}\r\n","<style>\r\n  input {\r\n    width: auto;\r\n  }\r\n</style>\r\n<div style=\"margin-left:15%;padding:1px 16px;\">\r\n  <div class=\"form-group\">\r\n    <h3>Add New Machine</h3>\r\n    <label>Machine Code</label>\r\n    <p>\r\n      <input\r\n        class=\"form-control\"\r\n        type=\"text\"\r\n        [(ngModel)]=\"machineModel.MachineCode\"\r\n      />\r\n    </p>\r\n    <label>Description</label>\r\n    <p>\r\n      <input\r\n        class=\"form-control\"\r\n        type=\"text\"\r\n        [(ngModel)]=\"machineModel.Description\"\r\n      />\r\n    </p>\r\n    <label>Hourly Rate</label>\r\n    <p>\r\n      <input\r\n        class=\"form-control\"\r\n        type=\"text\"\r\n        [(ngModel)]=\"machineModel.HrRent\"\r\n      />\r\n    </p>\r\n    <label>Max Hours per Day</label>\r\n    <p>\r\n      <input\r\n        class=\"form-control\"\r\n        type=\"text\"\r\n        [(ngModel)]=\"machineModel.MaxHrPerDay\"\r\n      />\r\n    </p>\r\n    <button class=\"btn btn-primary\" type=\"submit\" (click)=\"onSubmit()\">\r\n      Register\r\n    </button>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { TimecardsService } from \"../shared/timecards.service\";\r\nimport { TimecardModel } from \"../shared/timecardModel\";\r\nimport { JobsModel } from \"../shared/jobsModel\";\r\nimport { IJobs } from \"../shared/jobs\";\r\nimport { JobsService } from \"../shared/jobs.service\";\r\nimport { MachinesService } from \"../shared/machines.service\";\r\nimport { MachinesModel } from \"../shared/machinesModel\";\r\nimport { JobTimecardModel } from \"../shared/job-timecardModel\";\r\nimport { MachineTimecardModel } from \"../shared/machine-timecardModel\";\r\nimport { JobTimecardService } from \"../shared/job-timecard.service\";\r\nimport { MachineTimecardService } from \"../shared/machine-timecard.service\";\r\n@Component({\r\n  selector: \"app-add-timecard\",\r\n  templateUrl: \"./add-timecard.component.html\",\r\n  styleUrls: [\"./add-timecard.component.css\"]\r\n})\r\nexport class AddTimecardComponent implements OnInit {\r\n  submitted = false;\r\n  errorMsg = \"\";\r\n  public errMsg;\r\n  timecardModel = new TimecardModel(\r\n    undefined,\r\n    \"\",\r\n    undefined,\r\n    undefined,\r\n    \"\",\r\n    undefined,\r\n    undefined,\r\n    undefined,\r\n    undefined\r\n  );\r\n  jobtimecardModel = new JobTimecardModel(undefined, undefined, undefined);\r\n  machinetimecardModel = new MachineTimecardModel(\r\n    undefined,\r\n    undefined,\r\n    undefined\r\n  );\r\n  // jobModel = new JobsModel(undefined, \"\", \"\", undefined, undefined);\r\n  public jobs = [];\r\n  public machines = [];\r\n  public timecards = [];\r\n  //public jobid;\r\n  constructor(\r\n    private timecardService: TimecardsService,\r\n    private jobService: JobsService,\r\n    private machineService: MachinesService,\r\n    private jobtimecardService: JobTimecardService,\r\n    private machinetimecardService: MachineTimecardService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.jobService.getJobs().subscribe(\r\n      data => (this.jobs = data),\r\n      error => (this.errMsg = error),\r\n      () => console.log(\"the sequence completed!\")\r\n    );\r\n    this.machineService.getMachines().subscribe(\r\n      data => (this.machines = data),\r\n      error => (this.errMsg = error),\r\n      () => console.log(\"the sequence completed!\")\r\n    );\r\n    this.timecardService.getTimecards().subscribe(\r\n      data => (this.timecards = data),\r\n      error => (this.errMsg = error)\r\n    );\r\n    console.log(this.timecards);\r\n  }\r\n  success() {\r\n    alert(\"successfully submitted timecard!\");\r\n  }\r\n  onSubmit() {\r\n    //console.log(this.jobid);\r\n    this.submitted = true;\r\n    var j = 0;\r\n    for (var i = 0; i < this.timecards.length; i++) {\r\n      j = this.timecards[i].id;\r\n    }\r\n\r\n    this.jobtimecardModel.TimecardId = j + 1;\r\n    this.machinetimecardModel.TimecardId = j + 1;\r\n\r\n    this.timecardService.addTimecard(this.timecardModel).subscribe(\r\n      Response => console.log(\"success!\"),\r\n      error => (this.errorMsg = error.statusText)\r\n    );\r\n    this.jobtimecardService.addJob(this.jobtimecardModel).subscribe(\r\n      Response => console.log(\"added job-timecard\"),\r\n      error => (this.errMsg = error.statusText)\r\n    );\r\n    this.machinetimecardService.addMachine(this.machinetimecardModel).subscribe(\r\n      Response => console.log(\"added machine-timecard\"),\r\n      error => (this.errMsg = error.statusText)\r\n    );\r\n\r\n    this.success();\r\n  }\r\n}\r\n","<style>\r\n  input {\r\n    width: auto;\r\n  }\r\n  .inline {\r\n    display: flex;\r\n    flex-flow: row wrap;\r\n    align-items: center;\r\n  }\r\n</style>\r\n<div style=\"margin-left:15%;padding:1px 16px;\">\r\n  <h3>Timesheet{{ timecardModel.Id }} Submission</h3>\r\n  <p>\r\n    {{ timecardModel.Id }}\r\n  </p>\r\n  <span class=\"inline\">\r\n    <label>Site Code: &nbsp;</label>\r\n    <input\r\n      class=\"form-control\"\r\n      type=\"text\"\r\n      [(ngModel)]=\"timecardModel.SiteCode\"\r\n    />\r\n    <label> &nbsp;Contractor Name: &nbsp;</label>\r\n    <input class=\"form-control\" type=\"text\" [(ngModel)]=\"timecardModel.Name\" />\r\n    <label> &nbsp;Date: &nbsp;</label>\r\n    <input\r\n      class=\"form-control\"\r\n      type=\"date\"\r\n      [(ngModel)]=\"timecardModel.DateCreated\"\r\n    />\r\n  </span>\r\n  <div>\r\n    <h4>Labor Entry</h4>\r\n    <span class=\"inline\">\r\n      <label>Labor Code: &nbsp;</label>\r\n      <select [(ngModel)]=\"jobtimecardModel.JobId\">\r\n        <option *ngFor=\"let job of jobs\" [ngValue]=\"job.Id\">\r\n          {{ job.jobCode }}</option\r\n        >\r\n      </select>\r\n\r\n      <label> &nbsp;Hrs. Worked: &nbsp;</label>\r\n      <input\r\n        class=\"form-control\"\r\n        type=\"number\"\r\n        style=\"width: auto;\"\r\n        [(ngModel)]=\"timecardModel.TotalJobHours\"\r\n      />\r\n      <label> &nbsp;Total: &nbsp;</label>\r\n      <input\r\n        class=\"form-control\"\r\n        type=\"number\"\r\n        style=\"width: auto;\"\r\n        [(ngModel)]=\"timecardModel.TotalJobAmount\"\r\n      />\r\n    </span>\r\n  </div>\r\n  <div>\r\n    <h4>Machine Entry</h4>\r\n    <span class=\"inline\">\r\n      <label for=\"jobs\">Machine Code: &nbsp;</label>\r\n      <select [(ngModel)]=\"machinetimecardModel.MachineId\">\r\n        <option *ngFor=\"let m of machines\" [ngValue]=\"m.Id\">{{\r\n          m.machineCode\r\n        }}</option>\r\n      </select>\r\n\r\n      <label> &nbsp;Hrs. Used: &nbsp;</label>\r\n      <input\r\n        class=\"form-control\"\r\n        type=\"number\"\r\n        style=\"width: auto;\"\r\n        [(ngModel)]=\"timecardModel.TotalMachineHours\"\r\n      />\r\n      <label> &nbsp;Total: &nbsp;</label>\r\n      <input\r\n        class=\"form-control\"\r\n        type=\"number\"\r\n        style=\"width: auto;\"\r\n        [(ngModel)]=\"timecardModel.TotalMachineAmount\"\r\n      />\r\n    </span>\r\n  </div>\r\n  <button class=\"btn btn-primary\" type=\"submit\" (click)=\"onSubmit()\">\r\n    Register\r\n  </button>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from './shared/auth.service';\r\nimport {JwtHelperService} from '@auth0/angular-jwt'\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit{\r\n  jwtHelper = new JwtHelperService();\r\n\r\n  constructor(private authService: AuthService){}\r\n\r\n  ngOnInit() {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      this.authService.decodedToken = this.jwtHelper.decodeToken(token);\r\n    }\r\n  }\r\n}\r\n","<!DOCTYPE html>\r\n<html>\r\n  <head>\r\n    <style>\r\n      ul {\r\n        list-style-type: none;\r\n        margin: 0;\r\n        padding: 0;\r\n        overflow: hidden;\r\n        background-color: #333;\r\n      }\r\n\r\n      li {\r\n        float: left;\r\n      }\r\n\r\n      li a {\r\n        display: block;\r\n        color: white;\r\n        text-align: center;\r\n        padding: 14px 16px;\r\n        text-decoration: none;\r\n      }\r\n      .vertical-menu {\r\n        width: 200px;\r\n        list-style-type: none;\r\n        margin: 0;\r\n        padding: 0;\r\n        width: 15%;\r\n        background-color: #f1f1f1;\r\n        height: 100%; /* Full height */\r\n        position: fixed; /* Make it stick, even on scroll */\r\n        overflow: auto;\r\n      }\r\n\r\n      .vertical-menu a {\r\n        background-color: #eee;\r\n        color: black;\r\n        display: block;\r\n        padding: 12px;\r\n        text-decoration: none;\r\n      }\r\n\r\n      .vertical-menu a:hover {\r\n        background-color: #ccc;\r\n      }\r\n\r\n      .vertical-menu a.active {\r\n        background-color: #4caf50;\r\n        color: white;\r\n      }\r\n    </style>\r\n  </head>\r\n  <body>\r\n    <ul>\r\n      <li><a>Disaster Recovery Application</a></li>\r\n      <app-auth></app-auth>\r\n    </ul>\r\n    \r\n\r\n    <div class=\"vertical-menu\">\r\n      <a routerLink=\"/jobs\">Job Code Management</a>\r\n      <a routerLink=\"/machines\">Machine Management</a>\r\n      <a routerLink=\"/timecards\">Timecard Approval</a>\r\n      <a routerLink=\"/submittimecard\">Timecard Submission</a>\r\n\r\n    </div>\r\n\r\n    <div>\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </body>\r\n</html>\r\n","import { BrowserModule } from \"@angular/platform-browser\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { RouterModule } from '@angular/router';\r\nimport { AppRoutingModule } from \"../app-routing.module\";\r\nimport { AppComponent } from \"./app.component\";\r\nimport { JobsComponent } from \"./jobs/jobs.component\";\r\nimport { MachinesComponent } from \"./machines/machines.component\";\r\nimport { TimecardsComponent } from \"./timecards/timecards.component\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { AddJobComponent } from \"./add-job/add-job.component\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { EditJobComponent } from './edit-job/edit-job.component';\r\nimport { DeleteJobComponent } from './delete-job/delete-job.component';\r\nimport { AddMachineComponent } from './add-machine/add-machine.component';\r\nimport { EditMachineComponent } from './edit-machine/edit-machine.component';\r\nimport { DeleteMachineComponent } from './delete-machine/delete-machine.component';\r\nimport { AuthComponent } from './auth/auth.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { AuthService } from './shared/auth.service';\r\nimport { ErrorInterceptorProvider } from './shared/error.interceptor';\r\nimport { SubmitTimecardComponent } from './submit-timecard/submit-timecard.component';\r\nimport { AddTimecardComponent } from './add-timecard/add-timecard.component';\r\nimport { EditTimecardComponent } from './edit-timecard/edit-timecard.component';\r\nimport { DeleteTimecardComponent } from './delete-timecard/delete-timecard.component';\r\nimport { TimecardDetailComponent } from './timecard-detail/timecard-detail.component';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    JobsComponent,\r\n    MachinesComponent,\r\n    TimecardsComponent,\r\n    AddJobComponent,\r\n    EditJobComponent,\r\n    DeleteJobComponent,\r\n    AddMachineComponent,\r\n    EditMachineComponent,\r\n    DeleteMachineComponent,\r\n    AuthComponent,\r\n    RegisterComponent,\r\n    SubmitTimecardComponent,\r\n    AddTimecardComponent,\r\n    EditTimecardComponent,\r\n    DeleteTimecardComponent,\r\n    TimecardDetailComponent\r\n  ],\r\n  imports: [BrowserModule, \r\n    AppRoutingModule, \r\n    HttpClientModule,\r\n     FormsModule,\r\n  ],\r\n  providers: [AuthService, ErrorInterceptorProvider],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {AuthService} from \"../shared/auth.service\";\r\nimport { AlertifyService } from '../shared/alertify.service';\r\n\r\n@Component({\r\n  selector: 'app-auth',\r\n  templateUrl: './auth.component.html',\r\n  styleUrls: ['./auth.component.css']\r\n})\r\nexport class AuthComponent implements OnInit {\r\n\r\n  registerMode = false;\r\n  values: any;\r\n  model: any = {};\r\n  constructor( public authService: AuthService, private alertify: AlertifyService) {}\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  \r\nlogin() {\r\n\r\n  this.authService.login(this.model).subscribe(next => {\r\n    this.alertify.success(\"Logged in successfully.\");\r\n  }, error => {\r\n    this.alertify.error(error);\r\n   });\r\n}\r\n\r\nloggedIn() {\r\n  return this.authService.loggedIn();\r\n}\r\n\r\nlogout(){\r\n  localStorage.removeItem('token');\r\n  this.alertify.message('Logged Out');\r\n} \r\n\r\nregisterToggle(){\r\n  this.registerMode = true;\r\n  console.log(this.registerMode);\r\n}\r\n\r\ncancelRegisterMode(registerMode: boolean) {\r\n  this.registerMode = registerMode;\r\n }\r\n\r\n}\r\n","\r\n\r\n<form  #loginForm = \"ngForm\" *ngIf=\"!loggedIn()\"\r\n    style=\"padding-top: 4pt; padding-bottom: 2pt; float: right; padding-right: 2pt;\"\r\n    class=\"form-inline mt-2 mt-md-0\" \r\n    (ngSubmit) = \"login()\">\r\n   \r\n    <input class=\"form-control mr-sm-2\" style=\"width: 40%; font-size: 12px;\" type=\"text\" required name=\"username\" placeholder=\"Username\" required [(ngModel)]=\"model.username\">\r\n    <input class=\"form-control mr-sm-2\" style=\"width: 40%; font-size: 12px;\" type=\"password\" required name=\"password\" placeholder=\"Password\" required [(ngModel)]=\"model.password\">\r\n    <button [disabled]=\"!loginForm.valid\" style=\"width: 14%; font-size: 12px;\" class=\"btn btn-success\" type=\"submit\">Login</button>\r\n  </form>\r\n  \r\n  <button *ngIf=\"!loggedIn() \r\n  \"class=\"btn btn-info btn-sm mr-2 mt-2\"\r\n   (click)=\"registerToggle()\"\r\n   style=\"float: right; width: 5%\">\r\n   \r\n   Register</button>\r\n\r\n\r\n  <div *ngIf=\"loggedIn()\" >\r\n  <button class=\"nav-item\" (click)=\"logout()\">Logout</button>\r\n  <p class=\"text-light\">Welcome, {{authService.decodedToken.unique_name | titlecase}}</p>\r\n  </div>\r\n  \r\n<div *ngIf=\"registerMode\">\r\n  <app-register (cancelRegister)=\"cancelRegisterMode($event)\"></app-register>\r\n</div>  ","import { Component, OnInit } from \"@angular/core\";\r\nimport { JobsService } from \"../shared/jobs.service\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { Location } from \"@angular/common\";\r\n@Component({\r\n  selector: \"app-delete-job\",\r\n  templateUrl: \"./delete-job.component.html\",\r\n  styleUrls: [\"./delete-job.component.css\"]\r\n})\r\nexport class DeleteJobComponent implements OnInit {\r\n  errorMsg = \"\";\r\n  id: number;\r\n  public jobs;\r\n  constructor(\r\n    private jobService: JobsService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private location: Location\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n  delete() {\r\n    this.id = this.activatedRoute.snapshot.params[\"id\"];\r\n    this.jobService.deleteJob(this.id).subscribe(\r\n      data => (this.jobs = data),\r\n      error => (this.errorMsg = error),\r\n      () => console.log(\"the sequene completed!\")\r\n    );\r\n    alert(\"Successfully deleted!\");\r\n  }\r\n  backClicked() {\r\n    this.location.back();\r\n  }\r\n}\r\n","<style></style>\r\n\r\n<div style=\"margin-left:15%;padding:1px 16px;\">\r\n  <p>Are you sure to delete this job?</p>\r\n  <button (click)=\"delete()\">Yes</button>\r\n  <br />\r\n  <button (click)=\"backClicked()\">Go Back</button>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { MachinesService } from \"../shared/machines.service\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { Location } from \"@angular/common\";\r\n@Component({\r\n  selector: \"app-delete-machine\",\r\n  templateUrl: \"./delete-machine.component.html\",\r\n  styleUrls: [\"./delete-machine.component.css\"]\r\n})\r\nexport class DeleteMachineComponent implements OnInit {\r\n  errorMsg = \"\";\r\n  id: number;\r\n  public machines;\r\n\r\n  constructor(\r\n    private _location: Location,\r\n    private machineService: MachinesService,\r\n    private activatedRoute: ActivatedRoute\r\n  ) {}\r\n  success() {\r\n    alert(\"Successfully deleted machine!\");\r\n  }\r\n  ngOnInit(): void {}\r\n  delete() {\r\n    this.id = this.activatedRoute.snapshot.params[\"id\"];\r\n    this.machineService.deleteMachine(this.id).subscribe(\r\n      data => (this.machines = data),\r\n      error => (this.errorMsg = error),\r\n      () => console.log(\"The sequence completed!\")\r\n    );\r\n    this.success();\r\n  }\r\n  backClicked() {\r\n    this._location.back();\r\n  }\r\n}\r\n","<style>\r\n  input {\r\n    width: auto;\r\n  }\r\n</style>\r\n<div style=\"margin-left:15%;padding:1px 16px;\">\r\n  <p>Are you sure to delete this employee?</p>\r\n  <button (click)=\"delete()\">Yes</button>\r\n  <br />\r\n  <button (click)=\"backClicked()\">Go Back</button>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { TimecardsService } from \"../shared/timecards.service\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { Location } from \"@angular/common\";\r\n@Component({\r\n  selector: \"app-delete-timecard\",\r\n  templateUrl: \"./delete-timecard.component.html\",\r\n  styleUrls: [\"./delete-timecard.component.css\"]\r\n})\r\nexport class DeleteTimecardComponent implements OnInit {\r\n  errorMsg = \"\";\r\n  id: number;\r\n  public timecard;\r\n  constructor(\r\n    private timecardService: TimecardsService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private location: Location\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n  delete() {\r\n    this.id = this.activatedRoute.snapshot.params[\"id\"];\r\n    this.timecardService.deleteTimecard(this.id).subscribe(\r\n      data => (this.timecard = data),\r\n      error => (this.errorMsg = error),\r\n      () => console.log(\"the sequene completed!\")\r\n    );\r\n    alert(\"Successfully deleted!\");\r\n  }\r\n  backClicked() {\r\n    this.location.back();\r\n  }\r\n}\r\n","<style></style>\r\n\r\n<div style=\"margin-left:15%;padding:1px 16px;\">\r\n  <p>Are you sure to delete this timecard?</p>\r\n  <button (click)=\"delete()\">Yes</button>\r\n  <br />\r\n  <button (click)=\"backClicked()\">Go Back</button>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { JobsModel } from \"../shared/jobsModel\";\r\nimport { JobsService } from \"../shared/jobs.service\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: \"app-edit-job\",\r\n  templateUrl: \"./edit-job.component.html\",\r\n  styleUrls: [\"./edit-job.component.css\"]\r\n})\r\nexport class EditJobComponent implements OnInit {\r\n  submitted = false;\r\n  errorMsg = \"\";\r\n  id: number;\r\n  public jobs = [];\r\n  public machines = [];\r\n  jobModel = new JobsModel(undefined, \"\", \"\", null, null);\r\n  constructor(\r\n    private jobService: JobsService,\r\n    private activatedRoute: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.id = this.activatedRoute.snapshot.params[\"id\"];\r\n    this.jobModel.Id = this.id;\r\n  }\r\n  onSubmit() {\r\n    console.log(this.jobModel);\r\n\r\n    this.submitted = true;\r\n    this.jobService.editJob(this.jobModel, this.id).subscribe();\r\n  }\r\n}\r\n","<style>\r\n  input {\r\n    width: auto;\r\n  }\r\n</style>\r\n<div style=\"margin-left:15%;padding:1px 16px;\">\r\n  <label>ID</label>\r\n  <p>\r\n    <input\r\n      class=\"form-control\"\r\n      disabled\r\n      type=\"text\"\r\n      [(ngModel)]=\"jobModel.Id\"\r\n    />\r\n  </p>\r\n\r\n  <label>Job Code</label>\r\n  <p>\r\n    <input\r\n      class=\"form-control\"\r\n      required\r\n      type=\"text\"\r\n      [(ngModel)]=\"jobModel.JobCode\"\r\n    />\r\n  </p>\r\n\r\n  <label>Description</label>\r\n  <p>\r\n    <input\r\n      class=\"form-control\"\r\n      type=\"text\"\r\n      [(ngModel)]=\"jobModel.Description\"\r\n    />\r\n  </p>\r\n  <label>Hourly Rate</label>\r\n  <p>\r\n    <input class=\"form-control\" type=\"text\" [(ngModel)]=\"jobModel.HrRate\" />\r\n  </p>\r\n  <label>Max Hour per Day</label>\r\n  <p>\r\n    <input\r\n      class=\"form-control\"\r\n      type=\"text\"\r\n      [(ngModel)]=\"jobModel.MaxHrPerDay\"\r\n    />\r\n  </p>\r\n  <button class=\"btn btn-primary\" type=\"submit\" (click)=\"onSubmit()\">\r\n    Register\r\n  </button>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { MachinesModel } from \"../shared/machinesModel\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { MachinesService } from \"../shared/machines.service\";\r\n\r\n@Component({\r\n  selector: \"app-edit-machine\",\r\n  templateUrl: \"./edit-machine.component.html\",\r\n  styleUrls: [\"./edit-machine.component.css\"]\r\n})\r\nexport class EditMachineComponent implements OnInit {\r\n  submitted = false;\r\n  errorMsg = \"\";\r\n  id: number;\r\n  public machines;\r\n  machineModel = new MachinesModel(undefined, \"\", \"\", null, null);\r\n\r\n  constructor(\r\n    private machineService: MachinesService,\r\n    private activatedRoute: ActivatedRoute\r\n  ) {}\r\n  success() {\r\n    alert(\"Successfully edited machine!\");\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.id = this.activatedRoute.snapshot.params[\"id\"];\r\n    this.machineModel.Id = this.id;\r\n  }\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    this.machineService.editMachine(this.machineModel, this.id).subscribe();\r\n    this.success();\r\n  }\r\n}\r\n","<style>\r\n\r\n  input {\r\n    width: auto;\r\n  }\r\n</style>\r\n\r\n<div style=\"margin-left:15%;padding:1px 16px;\">\r\n  <h2>Edit employee</h2>\r\n  <label>ID</label>\r\n  <p>\r\n    <input\r\n      class=\"form-control\"\r\n      disabled\r\n      type=\"text\"\r\n      [(ngModel)]=\"machineModel.Id\"\r\n    />\r\n  </p>\r\n\r\n  <label>Machine Code</label>\r\n  <p>\r\n    <input\r\n      class=\"form-control\"\r\n      required\r\n      type=\"text\"\r\n      [(ngModel)]=\"machineModel.MachineCode\"\r\n    />\r\n  </p>\r\n\r\n  <label>Description</label>\r\n  <p>\r\n    <input\r\n      class=\"form-control\"\r\n      type=\"text\"\r\n      [(ngModel)]=\"machineModel.Description\"\r\n    />\r\n  </p>\r\n  <label>Hourly Rent</label>\r\n  <p>\r\n    <input class=\"form-control\" type=\"text\" [(ngModel)]=\"machineModel.HrRent\" />\r\n  </p>\r\n  <label>Max Hours per Day</label>\r\n  <p>\r\n    <input\r\n      class=\"form-control\"\r\n      type=\"text\"\r\n      [(ngModel)]=\"machineModel.MaxHrPerDay\"\r\n    />\r\n  </p>\r\n\r\n  <button class=\"btn btn-primary\" type=\"submit\" (click)=\"onSubmit()\">\r\n    Register\r\n  </button>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { TimecardModel } from \"../shared/timecardModel\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TimecardsService } from \"../shared/timecards.service\";\r\n\r\nimport { JobsService } from \"../shared/jobs.service\";\r\nimport { MachinesService } from \"../shared/machines.service\";\r\n@Component({\r\n  selector: \"app-edit-timecard\",\r\n  templateUrl: \"./edit-timecard.component.html\",\r\n  styleUrls: [\"./edit-timecard.component.css\"]\r\n})\r\nexport class EditTimecardComponent implements OnInit {\r\n  submitted = false;\r\n  errorMsg = \"\";\r\n  id: number;\r\n  timecardModel = new TimecardModel(\r\n    undefined,\r\n    \"\",\r\n    undefined,\r\n    undefined,\r\n    \"\",\r\n    undefined,\r\n    undefined,\r\n    undefined,\r\n    undefined\r\n  );\r\n  public jobs = [];\r\n  public machines = [];\r\n  constructor(\r\n    private timecardService: TimecardsService,\r\n    private activatedRoute: ActivatedRoute,\r\n\r\n    private jobService: JobsService,\r\n    private machineService: MachinesService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.id = this.activatedRoute.snapshot.params[\"id\"];\r\n    this.timecardModel.Id = this.id;\r\n    this.jobService.getJobs().subscribe(\r\n      data => (this.jobs = data),\r\n      error => (this.errorMsg = error),\r\n      () => console.log(\"the sequence completed!\")\r\n    );\r\n    this.machineService.getMachines().subscribe(\r\n      data => (this.machines = data),\r\n      error => (this.errorMsg = error),\r\n      () => console.log(\"the sequence completed!\")\r\n    );\r\n  }\r\n  onSubmit() {\r\n    console.log(this.timecardModel);\r\n\r\n    this.submitted = true;\r\n    this.timecardService\r\n      .updateTimecard(this.timecardModel, this.id)\r\n      .subscribe();\r\n  }\r\n}\r\n","<style>\r\n  input {\r\n    width: auto;\r\n  }\r\n  .inline {\r\n    display: flex;\r\n    flex-flow: row wrap;\r\n    align-items: center;\r\n  }\r\n</style>\r\n<div style=\"margin-left:15%;padding:1px 16px;\">\r\n  <h3>Timesheet Submission</h3>\r\n  <label>ID</label>\r\n  <input\r\n    class=\"form-control\"\r\n    type=\"text\"\r\n    disabled\r\n    [(ngModel)]=\"timecardModel.Id\"\r\n  />\r\n  <span class=\"inline\">\r\n    <label>Site Code: &nbsp;</label>\r\n    <input\r\n      class=\"form-control\"\r\n      type=\"text\"\r\n      [(ngModel)]=\"timecardModel.SiteCode\"\r\n    />\r\n    <label> &nbsp;Contractor Name: &nbsp;</label>\r\n    <input class=\"form-control\" type=\"text\" [(ngModel)]=\"timecardModel.Name\" />\r\n    <label> &nbsp;Date: &nbsp;</label>\r\n    <input\r\n      class=\"form-control\"\r\n      type=\"date\"\r\n      [(ngModel)]=\"timecardModel.DateCreated\"\r\n    />\r\n  </span>\r\n  <div>\r\n    <h4>Labor Entry</h4>\r\n    <span class=\"inline\">\r\n      <label>Labor Code: &nbsp;</label>\r\n      <select>\r\n        <option value=\"none\" selected disabled hidden>Select Job</option>\r\n        <option id=\"id\" *ngFor=\"let job of jobs\" value=\"{{ job.id }}\">\r\n          {{ job.jobCode }}</option\r\n        >\r\n      </select>\r\n\r\n      <label> &nbsp;Hrs. Worked: &nbsp;</label>\r\n      <input\r\n        class=\"form-control\"\r\n        type=\"number\"\r\n        style=\"width: auto;\"\r\n        [(ngModel)]=\"timecardModel.TotalJobHours\"\r\n      />\r\n      <label> &nbsp;Total: &nbsp;</label>\r\n      <input\r\n        class=\"form-control\"\r\n        type=\"number\"\r\n        style=\"width: auto;\"\r\n        [(ngModel)]=\"timecardModel.TotalJobAmount\"\r\n      />\r\n    </span>\r\n  </div>\r\n  <div>\r\n    <h4>Machine Entry</h4>\r\n    <span class=\"inline\">\r\n      <label for=\"jobs\">Machine Code: &nbsp;</label>\r\n      <select>\r\n        <option value=\"none\" selected disabled hidden>Select Machine</option>\r\n        <option *ngFor=\"let m of machines\" value=\"{{ m.Id }}\">{{\r\n          m.machineCode\r\n        }}</option>\r\n      </select>\r\n\r\n      <label> &nbsp;Hrs. Used: &nbsp;</label>\r\n      <input\r\n        class=\"form-control\"\r\n        type=\"number\"\r\n        style=\"width: auto;\"\r\n        [(ngModel)]=\"timecardModel.TotalMachineHours\"\r\n      />\r\n      <label> &nbsp;Total: &nbsp;</label>\r\n      <input\r\n        class=\"form-control\"\r\n        type=\"number\"\r\n        style=\"width: auto;\"\r\n        [(ngModel)]=\"timecardModel.TotalMachineAmount\"\r\n      />\r\n    </span>\r\n  </div>\r\n\r\n  <button class=\"btn btn-primary\" type=\"submit\" (click)=\"onSubmit()\">\r\n    Register\r\n  </button>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { JobsService } from \"../shared/jobs.service\";\r\n@Component({\r\n  selector: \"app-jobs\",\r\n  templateUrl: \"./jobs.component.html\",\r\n  styleUrls: [\"./jobs.component.css\"]\r\n})\r\nexport class JobsComponent implements OnInit {\r\n  public jobs = [];\r\n  public errMsg;\r\n\r\n  constructor(private jobService: JobsService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.jobService.getJobs().subscribe(\r\n      data => (this.jobs = data),\r\n      error => (this.errMsg = error),\r\n      () => console.log(\"the sequence completed!\")\r\n    );\r\n    // console.log(this.jobs);\r\n  }\r\n}\r\n","<div style=\"margin-left:15%;padding:1px 16px;\">\r\n  <h3>Jobs List</h3>\r\n  <a routerLink=\"/addjob\">Add New</a>\r\n  <table class=\"table table-hover\" style=\"width: auto;\">\r\n    <thead>\r\n      <tr>\r\n        <th>\r\n          Job Code\r\n        </th>\r\n        <th>\r\n          Description\r\n        </th>\r\n        <th>\r\n          Hourly Rate\r\n        </th>\r\n        <th>\r\n          Max Hours per Day\r\n        </th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor=\"let job of jobs\">\r\n        <td>{{ job.jobCode }}</td>\r\n        <td>{{ job.description }}</td>\r\n        <td>{{ job.hrRate }}</td>\r\n        <td>{{ job.maxHrPerDay }}</td>\r\n        <td>\r\n          <a routerLink=\"/editjob/{{ job.id }}\">\r\n            Edit\r\n          </a>\r\n        </td>\r\n        <td>\r\n          <a routerLink=\"/deletejob/{{ job.id }}\">\r\n            Delete\r\n          </a>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n<router-outlet></router-outlet>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { MachinesService } from \"../shared/machines.service\";\r\n\r\n@Component({\r\n  selector: \"app-machines\",\r\n  templateUrl: \"./machines.component.html\",\r\n  styleUrls: [\"./machines.component.css\"]\r\n})\r\nexport class MachinesComponent implements OnInit {\r\n  public machines = [];\r\n  public errMsg;\r\n  constructor(private machineService: MachinesService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.machineService.getMachines().subscribe(\r\n      data => (this.machines = data),\r\n      error => (this.errMsg = error),\r\n      () => console.log(\"the sequence completed!\")\r\n    );\r\n  }\r\n}\r\n","<div style=\"margin-left:15%;padding:1px 16px;\">\r\n  <h3>Machines List</h3>\r\n  <a routerLink=\"/addmachine\">Add New</a>\r\n  <table class=\"table table-hover\" style=\"width: auto;\">\r\n    <thead>\r\n      <tr>\r\n        <th>\r\n          Machine Code\r\n        </th>\r\n        <th>\r\n          Description\r\n        </th>\r\n        <th>\r\n          Hourly Rent\r\n        </th>\r\n        <th>\r\n          Max Hours per Day\r\n        </th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor=\"let machine of machines\">\r\n        <td>{{ machine.machineCode }}</td>\r\n        <td>{{ machine.description }}</td>\r\n        <td>{{ machine.hrRent }}</td>\r\n        <td>{{ machine.maxHrPerDay }}</td>\r\n        <td><a routerLink=\"/editmachine/{{ machine.id }}\">Edit</a></td>\r\n        <td><a routerLink=\"/deletemachine/{{ machine.id }}\">Delete</a></td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n<router-outlet></router-outlet>\r\n","\r\nimport { AuthService } from '../shared/Auth.service';\r\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { AlertifyService } from '../shared/alertify.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  // tslint:disable-next-line: new-parens\r\n  @Output() cancelRegister = new EventEmitter;\r\n\r\n  model: any = {};\r\n\r\n  constructor(private authService: AuthService, private alertify: AlertifyService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  register(){\r\n    this.authService.register(this.model)\r\n      .subscribe(() => {\r\n        this.alertify.success('Registration successful.');\r\n      }, error => {\r\n        this.alertify.error(error);\r\n      });\r\n  }\r\n\r\n  cancel(){\r\n    this.cancelRegister.emit(false);\r\n    console.log('cancelled');\r\n  }\r\n\r\n\r\n\r\n  \r\n}","<form #registerForm=\"ngForm\" (ngSubmit)=\"register()\">\r\n    <h2 class=\"text-center text-primary\">Sign Up</h2>\r\n    <hr>\r\n  \r\n    <div class=\"form-group\">\r\n      <input type=\"text\" class=\"form-control\" required name=\"username\" [(ngModel)]=\"model.username\" placeholder=\"Username\">\r\n    </div>\r\n  \r\n    <div class=\"form-group\">\r\n      <input type=\"password\" class=\"form-control\" required name=\"password\" [(ngModel)]=\"model.password\" placeholder=\"Password\">\r\n    </div>\r\n  \r\n    <div class=\"form-group text-center\">\r\n      <button class=\"btn btn-success\" type=\"submit\">Register</button>\r\n      <button class=\"btn btn-primary\" type=\"button\" (click)=\"cancel()\">Cancel</button>\r\n    </div>\r\n  \r\n  </form> ","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport {map} from 'rxjs/operators';\r\nimport {JwtHelperService} from '@auth0/angular-jwt'\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  baseUrl = 'https://localhost:44366/api/auth/';\r\n  jwtHelper = new JwtHelperService();\r\n  decodedToken: any;\r\n\r\nconstructor(private http: HttpClient) { }\r\n\r\nlogin(model: any) {\r\n  return this.http.post(this.baseUrl + 'login/', model)\r\n    .pipe(\r\n      map((response: any) => {\r\n        const user = response;\r\n        if (user) {\r\n          localStorage.setItem('token', user.token);\r\n          this.decodedToken = this.jwtHelper.decodeToken(user.token);\r\n          console.log(this.decodedToken);\r\n        }\r\n      })\r\n    );\r\n}\r\nregister(model: any) {\r\n  return this.http.post(this.baseUrl + 'register', model);\r\n}\r\n\r\nloggedIn() {\r\n  const token = localStorage.getItem('token');\r\n  return !this.jwtHelper.isTokenExpired(token);\r\n}\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport * as alertify from 'alertifyjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AlertifyService {\r\n\r\n  constructor() { }\r\n\r\n  confirm(message: string, okCallback: () => any) {\r\n    alertify.confirm(message, (e:any) => {\r\n      if (e) {\r\n        okCallback();\r\n      } else{}\r\n    });\r\n  }\r\n\r\n  success(message: string) {\r\n    alertify.success(message);\r\n  }\r\n\r\n  error(message: string) {\r\n    alertify.error(message);\r\n  }\r\n\r\n  warning(message: string) {\r\n    alertify.warning(message);\r\n  }\r\n\r\n  message(message: string) {\r\n    alertify.message(message);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport {map} from 'rxjs/operators';\r\nimport {JwtHelperService} from '@auth0/angular-jwt'\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  baseUrl = 'https://localhost:44366/api/auth/';\r\n  jwtHelper = new JwtHelperService();\r\n  decodedToken: any;\r\n\r\nconstructor(private http: HttpClient) { }\r\n\r\nlogin(model: any) {\r\n  return this.http.post(this.baseUrl + 'login/', model)\r\n    .pipe(\r\n      map((response: any) => {\r\n        const user = response;\r\n        if (user) {\r\n          localStorage.setItem('token', user.token);\r\n          this.decodedToken = this.jwtHelper.decodeToken(user.token);\r\n          console.log(this.decodedToken);\r\n        }\r\n      })\r\n    );\r\n}\r\nregister(model: any) {\r\n  return this.http.post(this.baseUrl + 'register', model);\r\n}\r\n\r\nloggedIn() {\r\n  const token = localStorage.getItem('token');\r\n  return !this.jwtHelper.isTokenExpired(token);\r\n}\r\n\r\n\r\n}\r\n","\r\nimport { Injectable } from \"@angular/core\";\r\nimport { HttpInterceptor, HttpErrorResponse, HTTP_INTERCEPTORS } from \"@angular/common/http\";\r\nimport { catchError } from 'rxjs/operators';\r\nimport { throwError } from 'rxjs';\r\n\r\n\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n  intercept(\r\n    req: import('@angular/common/http').HttpRequest<any>,\r\n    next: import('@angular/common/http').HttpHandler\r\n  ): import('rxjs').Observable<import('@angular/common/http').HttpEvent<any>> {\r\n    return next.handle(req).pipe(\r\n        catchError(error => {\r\n            if (error.status === 401) {\r\n                return throwError('Unauthorized');\r\n            }\r\n            if (error instanceof HttpErrorResponse) \r\n            {\r\n                const applicationError = error.headers.get('Application-Error');\r\n                if (applicationError) {\r\n                    return throwError (applicationError);\r\n                }\r\n                const serverError = error.error;\r\n                let modelStateErrors = '';\r\n                if (serverError.errors && typeof serverError.errors === 'object') {\r\n                    for (const key in serverError.errors){\r\n                        if (serverError.errors[key]) {\r\n                            modelStateErrors += serverError.errors[key] + '\\n';\r\n                        }\r\n                }\r\n             }\r\n                return throwError(modelStateErrors || serverError || 'Server Error');\r\n            }\r\n        })\r\n    )\r\n  }\r\n}\r\n\r\nexport const ErrorInterceptorProvider = {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: ErrorInterceptor,\r\n    multi: true\r\n}; ","import { Injectable } from \"@angular/core\";\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport { catchError } from \"rxjs/operators\";\r\nimport { IJobTimecard } from \"./job-timecard\";\r\nimport { JobTimecardModel } from \"./job-timecardModel\";\r\nimport { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class JobTimecardService {\r\n  private _url: string = \"https://localhost:44366/api/jobs_timecard\";\r\n  constructor(private http: HttpClient) {}\r\n  public getJobs(): Observable<IJobTimecard[]> {\r\n    return this.http\r\n      .get<IJobTimecard[]>(this._url)\r\n      .pipe(catchError(this.errorHandler));\r\n  }\r\n  public getDetail(id: number): Observable<IJobTimecard[]> {\r\n    return this.http\r\n      .get<IJobTimecard[]>(this._url + \"/\" + id)\r\n      .pipe(catchError(this.errorHandler));\r\n  }\r\n  public addJob(job: JobTimecardModel) {\r\n    return this.http\r\n      .post<any>(this._url, job)\r\n      .pipe(catchError(this.errorHandler));\r\n  }\r\n  public editJob(job: JobTimecardModel, id: number) {\r\n    return this.http\r\n      .put<any>(this._url + \"/\" + id, job)\r\n      .pipe(catchError(this.errorHandler));\r\n  }\r\n  public deleteJob(id: number) {\r\n    return this.http\r\n      .delete<any>(this._url + \"/\" + id)\r\n      .pipe(catchError(this.errorHandler));\r\n  }\r\n  errorHandler(error: HttpErrorResponse) {\r\n    return throwError(error.message || \"Server Error\");\r\n  }\r\n}\r\n","export class JobTimecardModel {\r\n  constructor(\r\n    public Id: number,\r\n    public JobId: number,\r\n    public TimecardId: number\r\n  ) {}\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport { catchError } from \"rxjs/operators\";\r\nimport { IJobs } from \"./jobs\";\r\nimport { JobsModel } from \"./jobsModel\";\r\nimport { FormGroup } from \"@angular/forms\";\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class JobsService {\r\n  private _url: string = \"https://localhost:44366/api/jobs\";\r\n  constructor(private http: HttpClient) {}\r\n\r\n  public getJobs(): Observable<IJobs[]> {\r\n    return this.http\r\n      .get<IJobs[]>(this._url)\r\n      .pipe(catchError(this.errorHandler));\r\n  }\r\n  public jobDetail(id: number): Observable<IJobs[]> {\r\n    return this.http\r\n      .get<IJobs[]>(this._url + \"/\" + id)\r\n      /*.pipe(catchError(this.errorHandler))*/;\r\n  }\r\n  // addJobs(): Observable<IJobs[]>{\r\n  //   return this.http.post<IJobs[]>(this._url,)\r\n  // }\r\n  public addJob(job: JobsModel) {\r\n    return this.http\r\n      .post<any>(this._url, job)\r\n      .pipe(catchError(this.errorHandler));\r\n  }\r\n  public editJob(job: JobsModel, id: number) {\r\n    return this.http\r\n      .put<any>(this._url + \"/\" + id, job)\r\n      .pipe(catchError(this.errorHandler));\r\n  }\r\n  public deleteJob(id: number) {\r\n    return this.http\r\n      .delete<any>(this._url + \"/\" + id)\r\n      .pipe(catchError(this.errorHandler));\r\n  }\r\n  errorHandler(error: HttpErrorResponse) {\r\n    return throwError(error.message || \"Server Error\");\r\n  }\r\n}\r\n","export class JobsModel {\r\n  constructor(\r\n    public Id: number,\r\n    public JobCode: string,\r\n    public Description: string,\r\n    public HrRate: number,\r\n    public MaxHrPerDay: number\r\n  ) {}\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\n\r\nimport { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport { catchError } from \"rxjs/operators\";\r\nimport { IMachineTimecard } from \"./machine-timecard\";\r\nimport { MachineTimecardModel } from \"./machine-timecardModel\";\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class MachineTimecardService {\r\n  private _url: string = \"https://localhost:44366/api/machines_timecard\";\r\n  constructor(private http: HttpClient) {}\r\n  getMachines(): Observable<IMachineTimecard[]> {\r\n    return this.http\r\n      .get<IMachineTimecard[]>(this._url)\r\n      .pipe(catchError(this.errorHandler));\r\n  }\r\n  public getDetail(id: number): Observable<IMachineTimecard[]> {\r\n    return this.http\r\n      .get<IMachineTimecard[]>(this._url + \"/\" + id)\r\n      .pipe(catchError(this.errorHandler));\r\n  }\r\n  public addMachine(machine: MachineTimecardModel) {\r\n    return this.http\r\n      .post<any>(this._url, machine)\r\n      .pipe(catchError(this.errorHandler));\r\n  }\r\n  public editMachine(machine: MachineTimecardModel, id: number) {\r\n    return this.http\r\n      .put<any>(this._url + \"/\" + id, machine)\r\n      .pipe(catchError(this.errorHandler));\r\n  }\r\n  public deleteMachine(id: number) {\r\n    return this.http\r\n      .delete<any>(this._url + \"/\" + id)\r\n      .pipe(catchError(this.errorHandler));\r\n  }\r\n  errorHandler(error: HttpErrorResponse) {\r\n    return throwError(error.message || \"Server Error\");\r\n  }\r\n}\r\n","export class MachineTimecardModel {\r\n  constructor(\r\n    public id: number,\r\n    public TimecardId: number,\r\n    public MachineId: number\r\n  ) {}\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport { catchError } from \"rxjs/operators\";\r\nimport { IMachines } from \"./machines\";\r\n\r\nimport { MachinesModel } from \"./machinesModel\";\r\nimport { FormGroup } from \"@angular/forms\";\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class MachinesService {\r\n  private _url: string = \"https://localhost:44366/api/machines\";\r\n  constructor(private http: HttpClient) {}\r\n  getMachines(): Observable<IMachines[]> {\r\n    return this.http\r\n      .get<IMachines[]>(this._url)\r\n      .pipe(catchError(this.errorHandler));\r\n  }\r\n  getDetail(id: number): Observable<IMachines[]> {\r\n    return this.http\r\n      .get<IMachines[]>(this._url + \"/\" + id)\r\n      .pipe(catchError(this.errorHandler));\r\n  }\r\n  public addMachine(machine: MachinesModel) {\r\n    return this.http\r\n      .post<any>(this._url, machine)\r\n      .pipe(catchError(this.errorHandler));\r\n  }\r\n  public editMachine(machine: MachinesModel, id: number) {\r\n    return this.http\r\n      .put<any>(this._url + \"/\" + id, machine)\r\n      .pipe(catchError(this.errorHandler));\r\n  }\r\n  public deleteMachine(id: number) {\r\n    return this.http\r\n      .delete<any>(this._url + \"/\" + id)\r\n      .pipe(catchError(this.errorHandler));\r\n  }\r\n  errorHandler(error: HttpErrorResponse) {\r\n    return throwError(error.message || \"Server Error\");\r\n  }\r\n}\r\n","export class MachinesModel {\r\n  constructor(\r\n    public Id: number,\r\n    public MachineCode: string,\r\n    public Description: string,\r\n    public HrRent: number,\r\n    public MaxHrPerDay: number\r\n  ) {}\r\n}\r\n","import { JobsModel } from \"./jobsModel\";\r\nimport { MachinesModel } from \"./machinesModel\";\r\nexport class TimecardModel {\r\n  constructor(\r\n    public Id: number,\r\n    public Name: string,\r\n    public DateCreated: Date,\r\n    public isConfirmed: boolean,\r\n    public SiteCode: string,\r\n    public TotalJobHours: number,\r\n    public TotalMachineHours: number,\r\n    public TotalJobAmount: number,\r\n    public TotalMachineAmount: number\r\n  ) {}\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\r\nimport { ITimecard } from \"./timecard\";\r\nimport { TimecardModel } from \"./timecardModel\";\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport { catchError } from \"rxjs/operators\";\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class TimecardsService {\r\n  private _url: string = \"https://localhost:44366/api/timecards\";\r\n  constructor(private http: HttpClient) {}\r\n\r\n  errorHandler(error: HttpErrorResponse) {\r\n    return throwError(error.message || \"Server Error\");\r\n  }\r\n  getTimecards(): Observable<ITimecard[]> {\r\n    return this.http\r\n      .get<ITimecard[]>(this._url)\r\n      .pipe(catchError(this.errorHandler));\r\n  }\r\n\r\n  getTimecardDetail(id: number): Observable<ITimecard[]> {\r\n    return this.http\r\n      .get<ITimecard[]>(this._url + \"/\" + id)\r\n      .pipe(catchError(this.errorHandler));\r\n  }\r\n\r\n  addTimecard(timecard: TimecardModel) {\r\n    return this.http\r\n      .post<any>(this._url, timecard)\r\n      .pipe(catchError(this.errorHandler));\r\n  }\r\n\r\n  updateTimecard(timecard: TimecardModel, id: number) {\r\n    return this.http\r\n      .put<any>(this._url + \"/\" + id, timecard)\r\n      .pipe(catchError(this.errorHandler));\r\n  }\r\n  deleteTimecard(id: number) {\r\n    return this.http\r\n      .delete<any>(this._url + \"/\" + id)\r\n      .pipe(catchError(this.errorHandler));\r\n  }\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { TimecardsService } from \"../shared/timecards.service\";\r\n\r\n@Component({\r\n  selector: \"app-submit-timecard\",\r\n  templateUrl: \"./submit-timecard.component.html\",\r\n  styleUrls: [\"./submit-timecard.component.css\"]\r\n})\r\nexport class SubmitTimecardComponent implements OnInit {\r\n  public timecards = [];\r\n  public errorMsg;\r\n  constructor(private timecardService: TimecardsService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.timecardService.getTimecards().subscribe(\r\n      data => {\r\n        this.timecards = data;\r\n        console.log(this.timecards);\r\n      },\r\n      error => (this.errorMsg = error),\r\n      () => console.log(\"The sequence completed!\")\r\n    );\r\n  }\r\n}\r\n","<div style=\"margin-left:15%;padding:1px 16px;\">\r\n  <h3>Timesheet Submission</h3>\r\n  <a routerLink=\"/addtimecard\">Add New</a>\r\n  <table class=\"table table-hover\" style=\"width: auto;\">\r\n    <thead>\r\n      <tr>\r\n        <th>\r\n          Site Code\r\n        </th>\r\n        <th>\r\n          Contractor Name\r\n        </th>\r\n        <th>\r\n          Total Job Hours\r\n        </th>\r\n        <th>\r\n          Total Machine Hours\r\n        </th>\r\n        <th>\r\n          Total Job Amount\r\n        </th>\r\n        <th>\r\n          Total Machine Amount\r\n        </th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor=\"let t of timecards\">\r\n        <td><a routerLink=\"/timecarddetail/{{ t.id }}\">\r\n          {{ t.siteCode }}\r\n        </a></td>\r\n        <td>{{ t.name }}</td>\r\n        <td>{{ t.totalJobHrs }}</td>\r\n        <td>{{ t.totalMachineHrs }}</td>\r\n        <td>{{ t.totalJobAmount }}</td>\r\n        <td>{{ t.totalMachineAmount }}</td>\r\n        <td>{{ t.isConfirmed }}</td>\r\n        <td>\r\n          <a routerLink=\"/edittimecard/{{ t.id }}\">Edit</a>\r\n        </td>\r\n        <td>\r\n          <a routerLink=\"/deletetimecard/{{ t.id }}\">\r\n            Delete\r\n          </a>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n<router-outlet></router-outlet>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { TimecardsService } from \"../shared/timecards.service\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { Location } from \"@angular/common\";\r\nimport { MachineTimecardModel } from \"../shared/machine-timecardModel\";\r\nimport { JobTimecardModel } from \"../shared/job-timecardModel\";\r\nimport { JobTimecardService } from \"../shared/job-timecard.service\";\r\nimport { MachineTimecardService } from \"../shared/machine-timecard.service\";\r\nimport { TimecardModel } from \"../shared/timecardModel\";\r\nimport { JobsModel } from \"../shared/jobsModel\";\r\nimport { MachinesModel } from \"../shared/machinesModel\";\r\nimport { JobsService } from \"../shared/jobs.service\";\r\nimport { MachinesService } from \"../shared/machines.service\";\r\nimport { IJobTimecard } from \"../shared/job-timecard\";\r\nimport { Observable } from \"rxjs\";\r\n@Component({\r\n  selector: \"app-timecard-detail\",\r\n  templateUrl: \"./timecard-detail.component.html\",\r\n  styleUrls: [\"./timecard-detail.component.css\"]\r\n})\r\nexport class TimecardDetailComponent implements OnInit {\r\n  public timecard;\r\n  public errMsg;\r\n  public id: number;\r\n\r\n  public jobs = [];\r\n  public machines = [];\r\n  public tempjobs = [];\r\n  public jobid1;\r\n  public machineid1;\r\n\r\n  public jobarr;\r\n  public machinearr;\r\n\r\n  jobtimecardModel = new JobTimecardModel(undefined, undefined, undefined);\r\n  machinetimecardModel = new MachineTimecardModel(\r\n    undefined,\r\n    undefined,\r\n    undefined\r\n  );\r\n\r\n  constructor(\r\n    private timecardService: TimecardsService,\r\n    private jobtimecardService: JobTimecardService,\r\n    private machinetimecardService: MachineTimecardService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private _location: Location,\r\n    private jobService: JobsService,\r\n    private machineService: MachinesService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    //get all the jt and mt\r\n    this.jobtimecardService.getJobs().subscribe(\r\n      data => (this.jobs = data),\r\n      error => (this.errMsg = error),\r\n      () => console.log(\"the sequence completed!\")\r\n    );\r\n\r\n    this.machinetimecardService.getMachines().subscribe(\r\n      data => (this.machines = data),\r\n      error => (this.errMsg = error),\r\n      () => console.log(\"the sequence completed!\")\r\n    );\r\n\r\n    this.id = this.activatedRoute.snapshot.params[\"id\"];\r\n    //filter\r\n\r\n    this.timecardService.getTimecardDetail(this.id).subscribe(\r\n      data => (this.timecard = data),\r\n      error => (this.errMsg = error),\r\n      () => console.log(\"the sequence completed!\")\r\n    );\r\n  }\r\n  backClicked() {\r\n    this._location.back();\r\n  }\r\n}\r\n","<div style=\"margin-left:15%;padding:1px 16px;\">\r\n  <h3>Timesheet Detail</h3>\r\n  <p>ID: {{ id }}</p>\r\n  <p>Site Code: {{ timecard.siteCode }}</p>\r\n  <p>Contractor Name: {{ timecard.name }}</p>\r\n  <p>Date created: {{ timecard.dateCreated }}</p>\r\n  <p>Total Job Hours: {{ timecard.totalJobHrs }}</p>\r\n  <p>Total Machine Hours: {{ timecard.totalMachineHrs }}</p>\r\n  <p>Total Job Amount: {{ timecard.totalJobAmount }}</p>\r\n  <p>Total Machine Amount: {{ timecard.totalMachineAmount }}</p>\r\n  <p>Confirmation: {{ timecard.isConfirmed }}</p>\r\n  <p>Associated Job:</p>\r\n\r\n  <tr *ngFor=\"let j of jobs\">\r\n    <td>{{ j.jobCode }}</td>\r\n    <td>{{ j.description }}</td>\r\n    <td>{{ j.hrRate }}</td>\r\n    <td>{{ j.maxHrPerDay }}</td>\r\n  </tr>\r\n\r\n  <p>Associated Machine:</p>\r\n\r\n  <tr *ngFor=\"let machine of machines\">\r\n    <td>{{ machine.machineCode }}</td>\r\n    <td>{{ machine.description }}</td>\r\n    <td>{{ machine.hrRent }}</td>\r\n    <td>{{ machine.maxHrPerDay }}</td>\r\n  </tr>\r\n  <button (click)=\"backClicked()\">Back</button>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { TimecardsService } from \"../shared/timecards.service\";\r\n@Component({\r\n  selector: \"app-timecards\",\r\n  templateUrl: \"./timecards.component.html\",\r\n  styleUrls: [\"./timecards.component.css\"]\r\n})\r\nexport class TimecardsComponent implements OnInit {\r\n  public timecards = [];\r\n  public errorMsg;\r\n  constructor(private timecardService: TimecardsService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.timecardService.getTimecards().subscribe(\r\n      data => (this.timecards = data),\r\n      error => (this.errorMsg = error),\r\n      () => console.log(\"The sequence completed!\")\r\n    );\r\n  }\r\n}\r\n","<div style=\"margin-left:15%;padding:1px 16px;\">\r\n  <h3>Timesheet Approval</h3>\r\n  <table class=\"table table-hover\" style=\"width: auto;\">\r\n    <thead>\r\n      <tr>\r\n        <th>\r\n          Site Code\r\n        </th>\r\n        <th>\r\n          Contractor Name\r\n        </th>\r\n        <th>\r\n          Total Job Hours\r\n        </th>\r\n        <th>\r\n          Total Machine Hours\r\n        </th>\r\n        <th>\r\n          Total Job Amount\r\n        </th>\r\n        <th>\r\n          Total Machine Amount\r\n        </th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor=\"let t of timecards\">\r\n        <td>\r\n          <a routerLink=\"/timecarddetail/{{ t.id }}\">\r\n            {{ t.siteCode }}\r\n          </a>\r\n        </td>\r\n        <td>{{ t.name }}</td>\r\n        <td>{{ t.totalJobHrs }}</td>\r\n        <td>{{ t.totalMachineHrs }}</td>\r\n        <td>{{ t.totalJobAmount }}</td>\r\n        <td>{{ t.totalMachineAmount }}</td>\r\n        <td>{{ t.isConfirmed }}</td>\r\n        <td>\r\n          <a routerLink=\"/edittimecard/{{ t.id }}\">Edit</a>\r\n        </td>\r\n        <td>\r\n          <a routerLink=\"/deletetimecard/{{ t.id }}\">\r\n            Delete\r\n          </a>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n<router-outlet></router-outlet>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}